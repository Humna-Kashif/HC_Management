{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/QualificationSection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FaEdit } from \"react-icons/fa\";\nimport QualificationItem from \"./QualificationItem\";\nimport { qualificationsAPI, addQualificationAPI } from \"../DB/API\";\nimport \"../Styles/DoctorValuesSection.scss\";\n\nconst QualificationSection = props => {\n  const [data, setData] = useState(props.qualificationData);\n  const doc_Id = props.id;\n  const [editing, setEditing] = useState(false);\n  const [qualificationValue, setQualificationValue] = useState(\"\");\n\n  const PrimaryButton = ({\n    label,\n    className,\n    onClick\n  }) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"primary\",\n      onClick: onClick,\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, label);\n  };\n\n  const EditButton = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"edit-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(FaEdit, {\n      className: \"edit-symbol\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const ChangeButton = ({\n    onClick,\n    button\n  }) => {\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: 3,\n      xs: 8,\n      className: \"edit-button\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, button);\n  };\n\n  const handleQualificationEdit = () => {\n    setEditing(true);\n  };\n\n  const handleSaveBtn = () => {\n    setEditing(false);\n  };\n\n  const handleCancelBtn = () => {\n    setEditing(false);\n  };\n\n  const renderItem = () => {\n    return data.map((item, i) => /*#__PURE__*/React.createElement(QualificationItem, {\n      callback: refresh,\n      key: i,\n      itemData: item,\n      id: doc_Id,\n      isEnableEdit: editing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const refresh = () => {\n    qualificationsAPI(doc_Id).then(result => {\n      console.log(\"new qualification api\", result, \"prev data\", data);\n      setData([]);\n      console.log(\"new qualification api\", result);\n      setData(result);\n    });\n  };\n\n  const [oneTime, setOneTime] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      oneTime && qualificationsAPI(doc_Id).then(result => {\n        console.log(\"new qualification api\", result);\n        setData(result);\n      });\n      setOneTime(false);\n    }, 200);\n    return () => clearTimeout(timer);\n  });\n\n  const handleAddQualification = () => {\n    if (qualificationValue !== \"\") {\n      addQualificationAPI(doc_Id, \"POST\", qualificationValue).then(result => {\n        console.log(\"Success\", result);\n        refresh();\n      });\n      setQualificationValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"separation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      offset: 1,\n      span: 7\n    },\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Qualification\")), editing ? /*#__PURE__*/React.createElement(ChangeButton, {\n    button: /*#__PURE__*/React.createElement(PrimaryButton, {\n      label: \"Done\",\n      onClick: handleSaveBtn,\n      className: \"done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(ChangeButton, {\n    button: /*#__PURE__*/React.createElement(EditButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }),\n    onClick: handleQualificationEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), editing && /*#__PURE__*/React.createElement(Row, {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 10,\n      offset: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"value__input\",\n    placeholder: \"Add Your Qualification ...\",\n    type: \"text\",\n    value: qualificationValue,\n    noValidate: true,\n    onChange: e => setQualificationValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryButton, {\n    label: \"Add\",\n    onClick: handleAddQualification,\n    className: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })))), renderItem());\n};\n\nexport default QualificationSection;\nQualificationSection.defaultProps = {\n  qualificationData: []\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/QualificationSection.js"],"names":["React","useEffect","useState","Button","Col","Row","FaEdit","QualificationItem","qualificationsAPI","addQualificationAPI","QualificationSection","props","data","setData","qualificationData","doc_Id","id","editing","setEditing","qualificationValue","setQualificationValue","PrimaryButton","label","className","onClick","EditButton","ChangeButton","button","handleQualificationEdit","handleSaveBtn","handleCancelBtn","renderItem","map","item","i","refresh","then","result","console","log","oneTime","setOneTime","timer","setTimeout","clearTimeout","handleAddQualification","offset","span","e","target","value","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,WAAvD;AACA,OAAO,oCAAP;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACS,KAAK,CAACG,iBAAP,CAAhC;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACK,EAArB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,EAAD,CAA5D;;AAEA,QAAMmB,aAAa,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,GAAD,KAAmC;AACvD,wBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,OAAO,EAAEA,OAHX;AAIE,MAAA,SAAS,EAAED,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGD,KANH,CADF;AAUD,GAXD;;AAaA,QAAMG,UAAU,GAAG,MAAM;AACvB,wBACE,uDACE;AAAM,MAAA,SAAS,EAAE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD;;AASA,QAAMC,YAAY,GAAG,CAAC;AAAEF,IAAAA,OAAF;AAAWG,IAAAA;AAAX,GAAD,KAAyB;AAC5C,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,SAAS,EAAE,aAA9B;AAA6C,MAAA,OAAO,EAAEH,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,MADH,CADF;AAKD,GAND;;AAQA,QAAMC,uBAAuB,GAAG,MAAM;AACpCV,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMW,aAAa,GAAG,MAAM;AAC1BX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMY,eAAe,GAAG,MAAM;AAC5BZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMa,UAAU,GAAG,MAAM;AACvB,WAAOnB,IAAI,CAACoB,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBACd,oBAAC,iBAAD;AACE,MAAA,QAAQ,EAAEC,OADZ;AAEE,MAAA,GAAG,EAAED,CAFP;AAGE,MAAA,QAAQ,EAAED,IAHZ;AAIE,MAAA,EAAE,EAAElB,MAJN;AAKE,MAAA,YAAY,EAAEE,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AASD,GAVD;;AAYA,QAAMkB,OAAO,GAAG,MAAM;AACpB3B,IAAAA,iBAAiB,CAACO,MAAD,CAAjB,CAA0BqB,IAA1B,CAAgCC,MAAD,IAAY;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC,EAA6C,WAA7C,EAA0DzB,IAA1D;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;AACAxB,MAAAA,OAAO,CAACwB,MAAD,CAAP;AACD,KALD;AAMD,GAPD;;AASA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BH,MAAAA,OAAO,IACLhC,iBAAiB,CAACO,MAAD,CAAjB,CAA0BqB,IAA1B,CAAgCC,MAAD,IAAY;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAArC;AACAxB,QAAAA,OAAO,CAACwB,MAAD,CAAP;AACD,OAHD,CADF;AAKAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPuB,EAOrB,GAPqB,CAAxB;AAQA,WAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD,GAVQ,CAAT;;AAYA,QAAMG,sBAAsB,GAAG,MAAM;AACnC,QAAI1B,kBAAkB,KAAK,EAA3B,EAA+B;AAC7BV,MAAAA,mBAAmB,CAACM,MAAD,EAAS,MAAT,EAAiBI,kBAAjB,CAAnB,CAAwDiB,IAAxD,CAA8DC,MAAD,IAAY;AACvEC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACAF,QAAAA,OAAO;AACR,OAHD;AAIAf,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAE0B,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAT;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIG9B,OAAO,gBACN,oBAAC,YAAD;AACE,IAAA,MAAM,eACJ,oBAAC,aAAD;AACE,MAAA,KAAK,EAAE,MADT;AAEE,MAAA,OAAO,EAAEY,aAFX;AAGE,MAAA,SAAS,EAAE,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAWN,oBAAC,YAAD;AACE,IAAA,MAAM,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEE,IAAA,OAAO,EAAED,uBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADF,EAuBGX,OAAO,iBACN,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAE8B,MAAAA,IAAI,EAAE,EAAR;AAAYD,MAAAA,MAAM,EAAE;AAApB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAE,cADb;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAE3B,kBAJT;AAKE,IAAA,UAAU,MALZ;AAME,IAAA,QAAQ,EAAG6B,CAAD,IAAO5B,qBAAqB,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,OAAO,EAAEL,sBAFX;AAGE,IAAA,SAAS,EAAE,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CAxBJ,EA4CGd,UAAU,EA5Cb,CADF;AAgDD,CA5ID;;AA8IA,eAAerB,oBAAf;AAEAA,oBAAoB,CAACyC,YAArB,GAAoC;AAClCrC,EAAAA,iBAAiB,EAAE;AADe,CAApC","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FaEdit } from \"react-icons/fa\";\nimport QualificationItem from \"./QualificationItem\";\nimport { qualificationsAPI, addQualificationAPI } from \"../DB/API\";\nimport \"../Styles/DoctorValuesSection.scss\";\n\nconst QualificationSection = (props) => {\n  const [data, setData] = useState(props.qualificationData);\n  const doc_Id = props.id;\n  const [editing, setEditing] = useState(false);\n  const [qualificationValue, setQualificationValue] = useState(\"\");\n\n  const PrimaryButton = ({ label, className, onClick }) => {\n    return (\n      <Button\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={onClick}\n        className={className}\n      >\n        {label}\n      </Button>\n    );\n  };\n\n  const EditButton = () => {\n    return (\n      <>\n        <span className={\"edit-label\"}>Edit</span>\n        <FaEdit className={\"edit-symbol\"}></FaEdit>\n      </>\n    );\n  };\n\n  const ChangeButton = ({ onClick, button }) => {\n    return (\n      <Col lg={3} xs={8} className={\"edit-button\"} onClick={onClick}>\n        {button}\n      </Col>\n    );\n  };\n\n  const handleQualificationEdit = () => {\n    setEditing(true);\n  };\n\n  const handleSaveBtn = () => {\n    setEditing(false);\n  };\n\n  const handleCancelBtn = () => {\n    setEditing(false);\n  };\n\n  const renderItem = () => {\n    return data.map((item, i) => (\n      <QualificationItem\n        callback={refresh}\n        key={i}\n        itemData={item}\n        id={doc_Id}\n        isEnableEdit={editing}\n      />\n    ));\n  };\n\n  const refresh = () => {\n    qualificationsAPI(doc_Id).then((result) => {\n      console.log(\"new qualification api\", result, \"prev data\", data);\n      setData([]);\n      console.log(\"new qualification api\", result);\n      setData(result);\n    });\n  };\n\n  const [oneTime, setOneTime] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      oneTime &&\n        qualificationsAPI(doc_Id).then((result) => {\n          console.log(\"new qualification api\", result);\n          setData(result);\n        });\n      setOneTime(false);\n    }, 200);\n    return () => clearTimeout(timer);\n  });\n\n  const handleAddQualification = () => {\n    if (qualificationValue !== \"\") {\n      addQualificationAPI(doc_Id, \"POST\", qualificationValue).then((result) => {\n        console.log(\"Success\", result);\n        refresh();\n      });\n      setQualificationValue(\"\");\n    }\n  };\n\n  return (\n    <div className={\"separation\"}>\n      <Row className={\"margin\"}>\n        <Col lg={{ offset: 1, span: 7 }} xs={4}>\n          <h4>Qualification</h4>\n        </Col>\n        {editing ? (\n          <ChangeButton\n            button={\n              <PrimaryButton\n                label={\"Done\"}\n                onClick={handleSaveBtn}\n                className={\"done\"}\n              />\n            }\n          />\n        ) : (\n          <ChangeButton\n            button={<EditButton />}\n            onClick={handleQualificationEdit}\n          />\n        )}\n      </Row>\n\n      {editing && (\n        <Row className={\"value\"}>\n          <Col lg={{ span: 10, offset: 1 }}>\n            <div className={\"value__container\"}>\n              <input\n                className={\"value__input\"}\n                placeholder=\"Add Your Qualification ...\"\n                type=\"text\"\n                value={qualificationValue}\n                noValidate\n                onChange={(e) => setQualificationValue(e.target.value)}\n              />\n              <PrimaryButton\n                label={\"Add\"}\n                onClick={handleAddQualification}\n                className={\"add\"}\n              />\n            </div>\n          </Col>\n        </Row>\n      )}\n      {renderItem()}\n    </div>\n  );\n};\n\nexport default QualificationSection;\n\nQualificationSection.defaultProps = {\n  qualificationData: [],\n};\n"]},"metadata":{},"sourceType":"module"}
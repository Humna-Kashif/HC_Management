{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/AppointmentsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row, Card, Container, Modal } from \"react-bootstrap\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\nimport CalenderSection from \"../Components/CalenderSection\";\nimport Dropdown from \"../Components/Dropdown\";\nimport { appointmentStatusAPI, appointmentDetailAPI, availableSlotsAPI, rescheduleAppointmentAPI, locationsAPI, getImage } from \"../DB/API\";\nimport Calender from \"react-calendar\";\n\nconst AppointmentsList = props => {\n  const data = props.itemData;\n  const loc_ID = props.loc_ID;\n  const doc_ID = props.id;\n  const pat_ID = props.pat_ID;\n  const appointment_Time = data.date_time;\n  const mytime = moment(appointment_Time);\n  const Appointment_Time = mytime.format(\"hh:mm A\");\n  var years = moment().diff(data.patient.dob, \"years\");\n  const [slots, setSlots] = useState([]);\n  const [timeSlot, setTimeSlot] = useState(appointment_Time);\n  const [date, setDate] = useState(new Date());\n  const [showRescheduleModal, setRescheduleModal] = useState(false);\n  const [locationDays, setLocationDays] = useState([]);\n  const [Selected, setSelected] = useState(false);\n  const [image, setImage] = useState(null);\n  console.log(\"formate date is \", moment().format(\"ddd MMM YY yyyy \") + \"12:34:29 GMT+0500 (Pakistan Standard Time)\");\n  console.log(\"formate date is \", date);\n\n  const onValueChange = statusVal => {\n    if (statusVal == \"upcoming\") {\n      return \"Checked In\";\n    } else if (statusVal == \"waiting\") {\n      return \"Start\";\n    } else {\n      return \"Done\";\n    }\n  };\n\n  const [profileData, setProfileData] = useState(props.Data);\n  const [status, setStatus] = useState(data.appointment_status);\n  const [value, setValue] = useState(onValueChange(data.appointment_status));\n\n  const onStatusChange = () => {\n    if (value == \"Checked In\") {\n      changeAppointmentStatusApi(data.appointment_id, \"waiting\"); // console.log(\"Status API\",result);\n    } else if (value == \"Start\") {\n      changeAppointmentStatusApi(data.appointment_id, \"inprogress\"); // setStatus(\"inprogress\");\n    } else {\n      changeAppointmentStatusApi(data.appointment_id, \"upcoming\"); // setStatus(\"upcoming\");\n    }\n  };\n\n  function titleCase(str) {\n    return str.toLowerCase().split(\" \").map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(\" \");\n  }\n\n  const onChange = date => {\n    setDate(date);\n    availableSlots(data.doctors_hospital_location_id, date);\n    console.log(\"my date \", date); //collectDisabledDays(data.appointment_location.days,0);\n  };\n\n  const handleModalClose = () => {\n    setRescheduleModal(false);\n  };\n\n  const changeAppointmentStatusApi = (app_id, status) => {\n    appointmentStatusAPI(doc_ID, loc_ID, pat_ID, app_id, \"PUT\", status).then(result => {\n      setStatus(status);\n      setValue(onValueChange(status));\n      props.callback(status, data.appointment_id);\n      console.log(\"StatusAPI : \", result, \"Status: \", status, \"Value: \", value);\n    });\n  };\n\n  const [locationID, setLoactionID] = useState(data.doctors_hospital_location_id);\n\n  const getLocDays = value => {\n    for (var i = 0; i < locationData.length; i++) {\n      if (locationData[i].location == value) {\n        setLoactionID(locationData[i].doctors_hospital_location_id);\n        return locationData[i].days;\n      }\n    }\n\n    return [];\n  };\n\n  const [disabledDays, setDisabledDays] = useState([]);\n\n  const collectDisabledDays = (docData, index) => {\n    let a = [];\n    let d1 = docData;\n    console.log(\"d1,\", d1);\n    let d2 = d1.split(\"-\");\n    let days2 = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n    let days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n\n    for (var k = 0; k < 7; k++) {\n      days = days.filter(item => item !== d2[k]);\n    }\n\n    console.log(\"doc data is \", days);\n\n    for (var j = 0; j < days.length; j++) {\n      for (var i = 0; i < days2.length; i++) {\n        if (days[j].toLowerCase() == days2[i].toLocaleLowerCase()) {\n          console.log(\"i is \", i);\n          a.push(i);\n        }\n      }\n    }\n\n    setDisabledDays(a);\n  }; // const renderPatientProfile = () =>{\n  //     return(\n  //         profileData.map((item)=>( <PatientProfile pat_ID={pat_ID} loc_ID={loc_ID} id={doc_ID} itemData={item} />))\n  //     )\n  // }\n\n\n  const handleReschedule = () => {\n    setSelectedValue(data.appointment_location.appointment_location_of_doctor);\n    setRescheduleModal(true);\n    console.log(\"this is happening\");\n  };\n\n  const handleConfirmReschedule = appointment_id => {\n    console.log(\"location id : \", locationID, \"appointment_id \", appointment_id, \"time \", timeSlot);\n    const mydate = moment(date);\n    const newdate = mydate.format(\"YYYY-MM-DD\");\n    rescheduleAppointmentAPI(appointment_id, locationID, \"PUT\", newdate, timeSlot).then(result => {\n      console.log(\"reschdule \", result);\n      handleModalClose();\n      props.callback(status, data.appointment_id);\n      collectDisabledDays(data.appointment_location.days, 0);\n    });\n    console.log(\"this is happening\", timeSlot, \" date \", newdate);\n  };\n\n  const availableSlots = (location_id, date) => {\n    const mydate = moment(date);\n    const newdate = mydate.format(\"YYYY-MM-DD\");\n    availableSlotsAPI(doc_ID, location_id, \"PUT\", newdate).then(result => {\n      console.log(\"available\", result);\n      setSlots(result[0].time_slots);\n    });\n  };\n\n  const renderAvailableSlots = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, slots.map(item => /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        backgroundColor: \"white\",\n        color: \"black\",\n        width: 80,\n        borderRadius: 5,\n        textAlign: \"center\",\n        padding: 2,\n        margin: 5\n      },\n      onClick: () => setTimeSlot(moment(moment(date).format(\"YYYY-MM-DD\") + \"T\" + item.available_time_slot + \"+00\").format(\"LT\")),\n      class: \"btn btn-primary\",\n      type: \"button\",\n      value: moment(moment(date).format(\"YYYY-MM-DD\") + \"T\" + item.available_time_slot + \"+00\").format(\"LT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const [locationData, setLocationData] = useState([]);\n  const [selectValue, setSelectedValue] = useState();\n\n  const handleChange1 = e => {\n    setSelectedValue(e.target.value);\n    console.log(\"days are \", e.target.days);\n    collectDisabledDays(getLocDays(e.target.value));\n  };\n\n  useEffect(() => {\n    locationsAPI(doc_ID).then(result => {\n      console.log(\"location api results\", result);\n      setLocationData(result);\n      setSelectedValue(data.appointment_location.appointment_location_of_doctor);\n      collectDisabledDays(data.appointment_location.days);\n    });\n    getImage('patients', data.patient.patient_id).then(json => {\n      setImage(\"data:image;charset=utf-8;base64,\" + json.encodedData);\n      console.log(\"my json is \", json);\n    }).catch(error => console.error(error)).finally(() => {});\n  }, []);\n\n  const renderItem = () => {\n    console.log(\"locationData is \", locationData);\n    return locationData.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.location,\n      days: item.days,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }\n    }, item.location));\n  }; //     const Item1 = ({ item, onPress, style }) => (\n  //     <TouchableOpacity onPress={onPress} style={[styles.item1, style]}>\n  //       <Text style={{fontWeight:'bold'}}>{moment(moment(date).format('YYYY-MM-DD')+'T'+item.available_time_slot+'+00').format('LT')}</Text>\n  //     </TouchableOpacity>\n  //   );\n  // const renderItem1 = ({ item }) => {\n  //     const backgroundColor = (item) === timeSlot ? \"#626567\" : \"#BDC3C7\";\n  //     return (\n  //       <Item1\n  //         item={item}\n  //         onClick={() => setTimeSlot((item))}\n  //         style={{ backgroundColor }}\n  //       />\n  //     );\n  //   };\n\n\n  const renderModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: showRescheduleModal,\n      onHide: handleModalClose,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      style: {\n        color: \"#e0004d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }\n    }, \"Reschedule\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexDirection: \"row\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flex: \"1\",\n        paddingLeft: 40,\n        paddingBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: image,\n      style: styles.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingLeft: 10,\n        flex: 1,\n        display: \"flex\",\n        fontWeight: \"bold\",\n        color: \"#e0004d\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, titleCase(data.patient.name)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        paddingLeft: 10,\n        flex: 1,\n        display: \"flex\",\n        fontWeight: \"bold\",\n        color: \"#e0004d\",\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, \"Current Time: \", Appointment_Time))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        flexDirection: \"row\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flex: \"1\",\n        paddingLeft: 40,\n        paddingBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, \"Select Location : \"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: selectValue,\n      onChange: handleChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, renderItem())))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, console.log(\"privious date is \", data.date_time), /*#__PURE__*/React.createElement(Calender, {\n      minDate: new Date(),\n      maxDate: new Date(moment().add(3, \"months\")),\n      tileDisabled: ({\n        date,\n        view\n      }) => view === \"month\" && // Block day tiles only\n      disabledDays.some(disabledDay => //   date.getFullYear() === disabledDate.getFullYear() &&\n      //   date.getMonth() === disabledDate.getMonth() &&\n      date.getDay() === disabledDay),\n      onChange: onChange,\n      value: new Date(data.date_time),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#e0004d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, \"Available Slots\"), renderAvailableSlots()))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => handleConfirmReschedule(data.appointment_id),\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }, \"Reschedule\")));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: styles.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"row\",\n      margin: 10\n    },\n    onClick: () => props.onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: image,\n    style: styles.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: 10,\n      fontWeight: \"bold\",\n      color: \"#e0004d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 15\n    }\n  }, titleCase(data.patient.name)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: 10,\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 15\n    }\n  }, \" \", years, \" Years old \", titleCase(data.patient.gender)), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, \"Appointment Time: \", Appointment_Time)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      borderStyle: \"solid\",\n      borderWidth: 1,\n      borderColor: \"#e0004d\",\n      padding: \"2px\",\n      color: \"#e0004d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, data.appointment_status))), /*#__PURE__*/React.createElement(\"footer\", {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: styles.reschedule_btn,\n    onClick: e => {\n      handleReschedule();\n      e.stopPropagation();\n      availableSlots(data.doctors_hospital_location_id, date);\n    },\n    class: \"btn btn-primary\",\n    type: \"button\",\n    value: \"Reschedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: styles.checkIn_btn,\n    onClick: e => {\n      onStatusChange();\n      e.stopPropagation();\n    },\n    class: \"btn btn-primary\",\n    type: \"button\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  })))), renderModal());\n};\n\nexport default AppointmentsList;\nconst styles = {\n  label: {\n    fontSize: 14,\n    color: \"grey\",\n    textAlign: \"Left\",\n    marginLeft: \"10px\",\n    marginTop: \"10px\"\n  },\n  input: {\n    fontSize: 14,\n    padding: 8,\n    borderRadius: \"5px\"\n  },\n  avatar: {\n    height: \"45px\",\n    width: \"45px\",\n    borderWidth: 0.3,\n    borderColor: \"#e0004d\",\n    borderStyle: \"solid\",\n    marginTop: 2\n  },\n  reschedule_btn: {\n    background: \"#A1EBA2\",\n    color: \"#096A0B \",\n    height: \"35px\",\n    borderRadius: \"1em\",\n    border: \"#91DB92\",\n    margin: \"10px\",\n    marginLeft: \"20px\",\n    width: \"150px\",\n    textAlign: \"center\"\n  },\n  checkIn_btn: {\n    background: \"#9EEAE8 \",\n    color: \"#096967\",\n    height: \"35px\",\n    borderRadius: \"1em\",\n    border: \"#8EDAD8\",\n    marginLeft: \"20px\",\n    margin: \"10px\",\n    width: \"150px\"\n  },\n  cards: {\n    backgroundColor: \"whitesmoke\",\n    width: \"100%\",\n    border: \"1px solid white\",\n    borderColor: \"gray\",\n    borderLeftColor: \"#e0004d\",\n    borderLeftWidth: 2\n  }\n};\nAppointmentsList.defaultProps = {\n  Data: []\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/AppointmentsList.js"],"names":["React","useEffect","useState","Button","Col","Row","Card","Container","Modal","Avatar","moment","CalenderSection","Dropdown","appointmentStatusAPI","appointmentDetailAPI","availableSlotsAPI","rescheduleAppointmentAPI","locationsAPI","getImage","Calender","AppointmentsList","props","data","itemData","loc_ID","doc_ID","id","pat_ID","appointment_Time","date_time","mytime","Appointment_Time","format","years","diff","patient","dob","slots","setSlots","timeSlot","setTimeSlot","date","setDate","Date","showRescheduleModal","setRescheduleModal","locationDays","setLocationDays","Selected","setSelected","image","setImage","console","log","onValueChange","statusVal","profileData","setProfileData","Data","status","setStatus","appointment_status","value","setValue","onStatusChange","changeAppointmentStatusApi","appointment_id","titleCase","str","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","onChange","availableSlots","doctors_hospital_location_id","handleModalClose","app_id","then","result","callback","locationID","setLoactionID","getLocDays","i","locationData","length","location","days","disabledDays","setDisabledDays","collectDisabledDays","docData","index","a","d1","d2","days2","k","filter","item","j","toLocaleLowerCase","push","handleReschedule","setSelectedValue","appointment_location","appointment_location_of_doctor","handleConfirmReschedule","mydate","newdate","location_id","time_slots","renderAvailableSlots","display","flexDirection","flexWrap","backgroundColor","color","width","borderRadius","textAlign","padding","margin","available_time_slot","setLocationData","selectValue","handleChange1","e","target","patient_id","json","encodedData","catch","error","finally","renderItem","renderModal","alignItems","flex","paddingLeft","paddingBottom","styles","avatar","fontWeight","fontSize","name","marginRight","add","view","some","disabledDay","getDay","marginLeft","label","cards","onClick","gender","borderStyle","borderWidth","borderColor","reschedule_btn","stopPropagation","checkIn_btn","marginTop","input","height","background","border","borderLeftColor","borderLeftWidth","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row, Card, Container, Modal } from \"react-bootstrap\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\nimport CalenderSection from \"../Components/CalenderSection\";\nimport Dropdown from \"../Components/Dropdown\";\nimport {\n  appointmentStatusAPI,\n  appointmentDetailAPI,\n  availableSlotsAPI,\n  rescheduleAppointmentAPI,\n  locationsAPI,\n  getImage\n} from \"../DB/API\";\nimport Calender from \"react-calendar\";\n\nconst AppointmentsList = (props) => {\n  const data = props.itemData;\n  const loc_ID = props.loc_ID;\n  const doc_ID = props.id;\n  const pat_ID = props.pat_ID;\n  const appointment_Time = data.date_time;\n  const mytime = moment(appointment_Time);\n  const Appointment_Time = mytime.format(\"hh:mm A\");\n  var years = moment().diff(data.patient.dob, \"years\");\n  const [slots, setSlots] = useState([]);\n  const [timeSlot, setTimeSlot] = useState(appointment_Time);\n  const [date, setDate] = useState(new Date());\n  const [showRescheduleModal, setRescheduleModal] = useState(false);\n  const [locationDays, setLocationDays] = useState([]);\n  const [Selected, setSelected] = useState(false);\n\n  const [image, setImage] = useState(null);\n  \n        \n    \n  console.log(\n    \"formate date is \",\n    moment().format(\"ddd MMM YY yyyy \") +\n      \"12:34:29 GMT+0500 (Pakistan Standard Time)\"\n  );\n  console.log(\"formate date is \", date);\n\n  const onValueChange = (statusVal) => {\n    if (statusVal == \"upcoming\") {\n      return \"Checked In\";\n    } else if (statusVal == \"waiting\") {\n      return \"Start\";\n    } else {\n      return \"Done\";\n    }\n  };\n  const [profileData, setProfileData] = useState(props.Data);\n  const [status, setStatus] = useState(data.appointment_status);\n  const [value, setValue] = useState(onValueChange(data.appointment_status));\n\n  const onStatusChange = () => {\n    if (value == \"Checked In\") {\n      changeAppointmentStatusApi(data.appointment_id, \"waiting\");\n      // console.log(\"Status API\",result);\n    } else if (value == \"Start\") {\n      changeAppointmentStatusApi(data.appointment_id, \"inprogress\");\n      // setStatus(\"inprogress\");\n    } else {\n      changeAppointmentStatusApi(data.appointment_id, \"upcoming\");\n      // setStatus(\"upcoming\");\n    }\n  };\n\n  function titleCase(str) {\n    return str\n      .toLowerCase()\n      .split(\" \")\n      .map(function (word) {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      })\n      .join(\" \");\n  }\n\n  const onChange = (date) => {\n    setDate(date);\n    availableSlots(data.doctors_hospital_location_id, date);\n    console.log(\"my date \",date);\n    //collectDisabledDays(data.appointment_location.days,0);\n  };\n\n  const handleModalClose = () => {\n    setRescheduleModal(false);\n  };\n\n  const changeAppointmentStatusApi = (app_id, status) => {\n    appointmentStatusAPI(doc_ID, loc_ID, pat_ID, app_id, \"PUT\", status).then(\n      (result) => {\n        setStatus(status);\n        setValue(onValueChange(status));\n        props.callback(status, data.appointment_id);\n        console.log(\n          \"StatusAPI : \",\n          result,\n          \"Status: \",\n          status,\n          \"Value: \",\n          value\n        );\n      }\n    );\n  };\n\n  const [locationID, setLoactionID] = useState(\n    data.doctors_hospital_location_id\n  );\n\n  const getLocDays = (value) => {\n    for (var i = 0; i < locationData.length; i++) {\n      if (locationData[i].location == value) {\n        setLoactionID(locationData[i].doctors_hospital_location_id);\n        return locationData[i].days;\n      }\n    }\n    return [];\n  };\n\n  const [disabledDays, setDisabledDays] = useState([]);\n\n  const collectDisabledDays = (docData, index) => {\n    let a = [];\n    let d1 = docData;\n    console.log(\"d1,\", d1);\n    let d2 = d1.split(\"-\");\n    let days2 = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n    let days = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n    for (var k = 0; k < 7; k++) {\n      days = days.filter((item) => item !== d2[k]);\n    }\n    console.log(\"doc data is \", days);\n\n    for (var j = 0; j < days.length; j++) {\n      for (var i = 0; i < days2.length; i++) {\n        if (days[j].toLowerCase() == days2[i].toLocaleLowerCase()) {\n          console.log(\"i is \", i);\n\n          a.push(i);\n        }\n      }\n    }\n    setDisabledDays(a);\n  };\n\n  // const renderPatientProfile = () =>{\n  //     return(\n  //         profileData.map((item)=>( <PatientProfile pat_ID={pat_ID} loc_ID={loc_ID} id={doc_ID} itemData={item} />))\n  //     )\n  // }\n\n  const handleReschedule = () => {\n    setSelectedValue(data.appointment_location.appointment_location_of_doctor);\n    setRescheduleModal(true);\n    console.log(\"this is happening\");\n  };\n\n  const handleConfirmReschedule = (appointment_id) => {\n    console.log(\n      \"location id : \",\n      locationID,\n      \"appointment_id \",\n      appointment_id,\n      \"time \",\n      timeSlot\n    );\n    const mydate = moment(date);\n    const newdate = mydate.format(\"YYYY-MM-DD\");\n    rescheduleAppointmentAPI(\n      appointment_id,\n      locationID,\n      \"PUT\",\n      newdate,\n      timeSlot\n    ).then((result) => {\n      console.log(\"reschdule \", result);\n      handleModalClose();\n      props.callback(status, data.appointment_id);\n      collectDisabledDays(data.appointment_location.days, 0);\n    });\n    console.log(\"this is happening\", timeSlot, \" date \", newdate);\n  };\n\n  const availableSlots = (location_id, date) => {\n    const mydate = moment(date);\n    const newdate = mydate.format(\"YYYY-MM-DD\");\n    availableSlotsAPI(doc_ID, location_id, \"PUT\", newdate).then((result) => {\n      console.log(\"available\", result);\n      setSlots(result[0].time_slots);\n    });\n  };\n\n  const renderAvailableSlots = () => {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n        {slots.map((item) => (\n          <input\n            style={{\n              backgroundColor: \"white\",\n              color: \"black\",\n              width: 80,\n              borderRadius: 5,\n              textAlign: \"center\",\n              padding: 2,\n              margin: 5,\n            }}\n            onClick={() =>\n              setTimeSlot(\n                moment(\n                  moment(date).format(\"YYYY-MM-DD\") +\n                    \"T\" +\n                    item.available_time_slot +\n                    \"+00\"\n                ).format(\"LT\")\n              )\n            }\n            class=\"btn btn-primary\"\n            type=\"button\"\n            value={moment(\n              moment(date).format(\"YYYY-MM-DD\") +\n                \"T\" +\n                item.available_time_slot +\n                \"+00\"\n            ).format(\"LT\")}\n          ></input>\n        ))}\n      </div>\n    );\n  };\n\n  const [locationData, setLocationData] = useState([]);\n  const [selectValue, setSelectedValue] = useState();\n\n  const handleChange1 = (e) => {\n    setSelectedValue(e.target.value);\n    console.log(\"days are \", e.target.days);\n    collectDisabledDays(getLocDays(e.target.value));\n  };\n\n  useEffect(() => {\n    locationsAPI(doc_ID).then((result) => {\n      console.log(\"location api results\", result);\n      setLocationData(result);\n      setSelectedValue(\n        data.appointment_location.appointment_location_of_doctor\n      );\n      collectDisabledDays(data.appointment_location.days);\n    });\n    getImage('patients',data.patient.patient_id)\n        .then((json) => {setImage(\"data:image;charset=utf-8;base64,\"+json.encodedData); console.log(\"my json is \", json);})\n        .catch((error) => console.error(error))\n        .finally(() => {\n        });\n  }, []);\n\n  const renderItem = () => {\n    console.log(\"locationData is \", locationData);\n    return locationData.map((item, i) => (\n      <option value={item.location} days={item.days}>\n        {item.location}\n      </option>\n    ));\n  };\n\n  //     const Item1 = ({ item, onPress, style }) => (\n  //     <TouchableOpacity onPress={onPress} style={[styles.item1, style]}>\n\n  //       <Text style={{fontWeight:'bold'}}>{moment(moment(date).format('YYYY-MM-DD')+'T'+item.available_time_slot+'+00').format('LT')}</Text>\n\n  //     </TouchableOpacity>\n  //   );\n\n  // const renderItem1 = ({ item }) => {\n  //     const backgroundColor = (item) === timeSlot ? \"#626567\" : \"#BDC3C7\";\n  //     return (\n  //       <Item1\n  //         item={item}\n  //         onClick={() => setTimeSlot((item))}\n  //         style={{ backgroundColor }}\n  //       />\n  //     );\n  //   };\n\n  const renderModal = () => {\n    return (\n      <Modal\n        show={showRescheduleModal}\n        onHide={handleModalClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title style={{ color: \"#e0004d\" }}>Reschedule</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <div\n              style={{\n                flexDirection: \"row\",\n                display: \"flex\",\n                alignItems: \"center\",\n                flex: \"1\",\n                paddingLeft: 40,\n                paddingBottom: 20,\n              }}\n            >\n              <Avatar src={image} style={styles.avatar} />\n              <span\n                style={{\n                  paddingLeft: 10,\n                  flex: 1,\n                  display: \"flex\",\n                  fontWeight: \"bold\",\n                  color: \"#e0004d\",\n                  fontSize: 18,\n                }}\n              >\n                {titleCase(data.patient.name)}\n              </span>\n              <span\n                style={{\n                  paddingLeft: 10,\n                  flex: 1,\n                  display: \"flex\",\n                  fontWeight: \"bold\",\n                  color: \"#e0004d\",\n                  fontSize: 18,\n                }}\n              >\n                Current Time: {Appointment_Time}\n              </span>\n            </div>\n          </Row>\n          <Row>\n            <Col\n              style={{\n                flexDirection: \"row\",\n                display: \"flex\",\n                alignItems: \"center\",\n                flex: \"1\",\n                paddingLeft: 40,\n                paddingBottom: 20,\n              }}\n            >\n              <Container>\n                <Row style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <div style={{ marginRight: 10 }}>\n                    {\" \"}\n                    <label>Select Location : </label>{\" \"}\n                  </div>\n                  <div>\n                    <select value={selectValue} onChange={handleChange1}>\n                      {renderItem()}\n                    </select>\n                  </div>\n                </Row>\n              </Container>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              {console.log(\"privious date is \", data.date_time)}\n              <Calender\n                minDate={new Date()}\n                maxDate={new Date(moment().add(3, \"months\"))}\n                tileDisabled={({ date, view }) =>\n                  view === \"month\" && // Block day tiles only\n                  disabledDays.some(\n                    (disabledDay) =>\n                      //   date.getFullYear() === disabledDate.getFullYear() &&\n                      //   date.getMonth() === disabledDate.getMonth() &&\n                      date.getDay() === disabledDay\n                  )\n                }\n                onChange={onChange}\n                value={new Date(data.date_time)}\n              />\n            </Col>\n            <Col>\n              <div style={{ color: \"#e0004d\" }}>Available Slots</div>\n              {renderAvailableSlots()}\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => handleConfirmReschedule(data.appointment_id)}\n            style={{ marginLeft: \"10px\" }}\n          >\n            Reschedule\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  return (\n    <Container fluid>\n      <Row style={styles.label}>\n        <Card style={styles.cards}>\n          <Card.Text\n            style={{\n              display: \"flex\",\n              flex: 1,\n              flexDirection: \"row\",\n              margin: 10,\n            }}\n            onClick={() => props.onClick()}\n          >\n            <Avatar src={image} style={styles.avatar} />\n            <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\n              <span\n                style={{\n                  paddingLeft: 10,\n                  fontWeight: \"bold\",\n                  color: \"#e0004d\",\n                }}\n              >\n                {titleCase(data.patient.name)}\n              </span>\n              <span style={{ paddingLeft: 10, color: \"black\" }}>\n                {\" \"}\n                {years} Years old {titleCase(data.patient.gender)}\n              </span>\n              <span style={{ paddingLeft: 10 }}>\n                Appointment Time: {Appointment_Time}\n              </span>\n            </div>\n            <div>\n              <span\n                style={{\n                  borderStyle: \"solid\",\n                  borderWidth: 1,\n                  borderColor: \"#e0004d\",\n                  padding: \"2px\",\n                  color: \"#e0004d\",\n                }}\n              >\n                {data.appointment_status}\n              </span>\n            </div>\n          </Card.Text>\n          <footer style={{ display: \"flex\", flex: 1, flexDirection: \"row\" }}>\n            <input\n              style={styles.reschedule_btn}\n              onClick={(e) => {\n                handleReschedule();\n                e.stopPropagation();\n                availableSlots(data.doctors_hospital_location_id, date);\n              }}\n              class=\"btn btn-primary\"\n              type=\"button\"\n              value=\"Reschedule\"\n            ></input>\n            {\n              <input\n                style={styles.checkIn_btn}\n                onClick={(e) => {\n                  onStatusChange();\n                  e.stopPropagation();\n                }}\n                class=\"btn btn-primary\"\n                type=\"button\"\n                value={value}\n              ></input>\n            }\n          </footer>\n        </Card>\n      </Row>\n      {renderModal()}\n    </Container>\n  );\n};\n\nexport default AppointmentsList;\n\nconst styles = {\n  label: {\n    fontSize: 14,\n    color: \"grey\",\n    textAlign: \"Left\",\n    marginLeft: \"10px\",\n    marginTop: \"10px\",\n  },\n  input: { fontSize: 14, padding: 8, borderRadius: \"5px\" },\n  avatar: {\n    height: \"45px\",\n    width: \"45px\",\n    borderWidth: 0.3,\n    borderColor: \"#e0004d\",\n    borderStyle: \"solid\",\n    marginTop: 2,\n  },\n  reschedule_btn: {\n    background: \"#A1EBA2\",\n    color: \"#096A0B \",\n    height: \"35px\",\n    borderRadius: \"1em\",\n    border: \"#91DB92\",\n    margin: \"10px\",\n    marginLeft: \"20px\",\n    width: \"150px\",\n    textAlign: \"center\",\n  },\n  checkIn_btn: {\n    background: \"#9EEAE8 \",\n    color: \"#096967\",\n    height: \"35px\",\n    borderRadius: \"1em\",\n    border: \"#8EDAD8\",\n    marginLeft: \"20px\",\n    margin: \"10px\",\n    width: \"150px\",\n  },\n  cards: {\n    backgroundColor: \"whitesmoke\",\n    width: \"100%\",\n    border: \"1px solid white\",\n    borderColor: \"gray\",\n    borderLeftColor: \"#e0004d\",\n    borderLeftWidth: 2,\n  },\n};\n\nAppointmentsList.defaultProps = {\n  Data: [],\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/AboutSection.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport { editAboutInfoAPI } from \"../DB/API\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../Styles/AboutSection.scss\";\n\nconst AboutSection = props => {\n  //const data = props.data;\n  const doc_Id = props.id;\n  const dataRecieved = props.data == []; //    console.log(\"Prop ID\", props.data, dataRecieved)\n  // const [data, setData] = useState(props.qualificationData);\n\n  const [aboutVal, setAboutVal] = useState({\n    name: \"\",\n    dob: \"\",\n    gender: \"\",\n    specilization: \"\",\n    about: \"\"\n  });\n  const [displayDOB, setDisplayDOB] = useState(\"\"); //    const [aboutVal, setAboutVal] = useState({...props.data});\n  // const [oneTime,setOneTime]=useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log(\"changesss\", props.data, aboutVal);\n      setAboutVal({\n        name: props.data.name,\n        dob: props.data.dob,\n        gender: props.data.gender,\n        specialization: props.data.specialization,\n        about: props.data.about\n      });\n    }, 200);\n    return () => clearTimeout(timer);\n  }, [props.data]); // console.log(\"about val \",aboutVal);\n  // console.log(\"my about data is: \", aboutVal);\n\n  const [prevVal, setPrevVal] = useState(aboutVal);\n  const [editing, setEditing] = useState(false);\n  const [startDate, setStartDate] = useState(aboutVal.dob);\n\n  const AboutSectionRow = props => {\n    const label = props.label;\n    const aboutVal = props.value;\n    const editing = props.editing;\n    const editField = props.input;\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"about-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 2,\n        offset: 1\n      },\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, label), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"display-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, editing ? editField : aboutVal));\n  };\n\n  const GenderRadioButton = ({\n    value\n  }) => {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: 20\n      },\n      type: \"radio\",\n      value: value,\n      name: \"gender\",\n      checked: aboutVal.gender === value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    });\n  };\n\n  function parseISOString(s) {\n    var b = s.split(/\\D+/);\n    return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  }\n\n  function isoFormatDMY(d) {\n    function pad(n) {\n      return (n < 10 ? \"0\" : \"\") + n;\n    }\n\n    return pad(d.getUTCDate()) + \"/\" + pad(d.getUTCMonth() + 1) + \"/\" + d.getUTCFullYear();\n  }\n\n  const handleAboutEdit = () => {\n    // console.log(\"Time managing: \", (new Date(\"1992-10-03\")), \"Dob prop:\", startDate);\n    setStartDate(parseISOString(props.data.dob)); // console.log(\"MyDate: \",props.data.dob,\"ISO: \", parseISOString(props.data.dob),\"isoDMY:\", isoFormatDMY(parseISOString(props.data.dob)) );\n\n    setPrevVal(aboutVal);\n    setEditing(true);\n  };\n\n  const handleSaveBtn = () => {\n    editAboutInfoAPI(doc_Id, \"PUT\", aboutVal.name, aboutVal.gender, aboutVal.dob, aboutVal.specialization, aboutVal.about).then(result => {\n      console.log(\"About api\", result);\n      props.callback(); //  setAboutVal(result);\n    });\n    setEditing(false);\n  };\n\n  const handleCancelBtn = () => {\n    setAboutVal(prevVal);\n    setEditing(false);\n  };\n\n  const renderItem = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Date of Birth\",\n      value: !!aboutVal.dob && isoFormatDMY(parseISOString(aboutVal.dob)),\n      editing: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Gender\",\n      value: aboutVal.gender,\n      editing: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"About\",\n      value: aboutVal.about,\n      editing: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const renderEditingItem = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Name:\",\n      editing: true,\n      input: /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input__about\",\n        placeholder: \"Enter Your Name ...\",\n        type: \"text\",\n        value: aboutVal.name,\n        noValidate: true,\n        onChange: e => {\n          setAboutVal({ ...aboutVal,\n            name: e.target.value\n          });\n          console.log(\"changes\", aboutVal, e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Date of Birth:\",\n      editing: true,\n      input: /*#__PURE__*/React.createElement(DatePicker, {\n        className: \"input__about\",\n        selected: startDate,\n        onChange: date => {\n          setStartDate(date);\n          formatDate(date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Gender:\",\n      editing: true,\n      input: /*#__PURE__*/React.createElement(\"div\", {\n        onChange: e => setAboutVal({ ...aboutVal,\n          gender: e.target.value\n        }),\n        className: \"input__about\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(GenderRadioButton, {\n        value: \"Male\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 52\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(GenderRadioButton, {\n        value: \"Female\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }), \" Female\", /*#__PURE__*/React.createElement(GenderRadioButton, {\n        value: \"Other\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }), \" Other\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"Specialization:\",\n      editing: true,\n      input: /*#__PURE__*/React.createElement(\"input\", {\n        className: \"input__about\",\n        placeholder: \"Enter Your specialization ...\",\n        type: \"text\",\n        value: aboutVal.specialization,\n        noValidate: true,\n        onChange: e => {\n          setAboutVal({ ...aboutVal,\n            specialization: e.target.value\n          });\n          console.log(\"changes\", aboutVal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AboutSectionRow, {\n      label: \"About:\",\n      editing: true,\n      input: /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"text-area\",\n        placeholder: \"Enter About Yourself ...\",\n        type: \"text\",\n        value: aboutVal.about,\n        noValidate: true,\n        rows: 3,\n        onChange: e => {\n          setAboutVal({ ...aboutVal,\n            about: e.target.value\n          });\n          console.log(\"changes\", aboutVal);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const formatDate = date => {\n    const formattedDate = date.getFullYear().toString() + \"/\" + (date.getMonth() + 1).toString() + \"/\" + date.getDate().toString();\n    console.log(\"New date:\", formattedDate);\n    setAboutVal({ ...aboutVal,\n      dob: formattedDate\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingBottom: 20,\n      display: \"flex\",\n      flex: 1,\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      offset: 1,\n      span: 7\n    },\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"About\")), editing ? /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    xs: 8,\n    style: {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"primary\",\n    onClick: handleSaveBtn,\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, \"Save changes\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"outline-primary\",\n    onClick: handleCancelBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Cancel\")) : /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    xs: 8,\n    style: {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    onClick: handleAboutEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#e0004d\",\n      paddingRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(FaEdit, {\n    style: {\n      cursor: \"pointer\",\n      color: \"#e0004d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }))), editing ? renderEditingItem() : renderItem()));\n};\n\nexport default AboutSection;\nAboutSection.defaultProps = {\n  aboutData: {\n    name: \"Doctor Name\",\n    specialization: \"Doctor Specialization\",\n    gender: \"Other\",\n    dob: \"1992/10/03\",\n    about: \"about\"\n  }\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/AboutSection.js"],"names":["React","useEffect","useState","Button","Col","Row","FaEdit","DatePicker","editAboutInfoAPI","AboutSection","props","doc_Id","id","dataRecieved","data","aboutVal","setAboutVal","name","dob","gender","specilization","about","displayDOB","setDisplayDOB","timer","setTimeout","console","log","specialization","clearTimeout","prevVal","setPrevVal","editing","setEditing","startDate","setStartDate","AboutSectionRow","label","value","editField","input","span","offset","GenderRadioButton","width","parseISOString","s","b","split","Date","UTC","isoFormatDMY","d","pad","n","getUTCDate","getUTCMonth","getUTCFullYear","handleAboutEdit","handleSaveBtn","then","result","callback","handleCancelBtn","renderItem","renderEditingItem","e","target","date","formatDate","formattedDate","getFullYear","toString","getMonth","getDate","paddingBottom","display","flex","flexDirection","margin","alignItems","justifyContent","marginRight","color","paddingRight","cursor","defaultProps","aboutData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAO,4CAAP;AACA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,QAAMC,MAAM,GAAGD,KAAK,CAACE,EAArB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,IAAc,EAAnC,CAH8B,CAI9B;AACA;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;AACvCe,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,GAAG,EAAE,EAFkC;AAGvCC,IAAAA,MAAM,EAAE,EAH+B;AAIvCC,IAAAA,aAAa,EAAE,EAJwB;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAOA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C,CAb8B,CAc9B;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,KAAK,CAACI,IAA/B,EAAqCC,QAArC;AACAC,MAAAA,WAAW,CAAC;AACVC,QAAAA,IAAI,EAAEP,KAAK,CAACI,IAAN,CAAWG,IADP;AAEVC,QAAAA,GAAG,EAAER,KAAK,CAACI,IAAN,CAAWI,GAFN;AAGVC,QAAAA,MAAM,EAAET,KAAK,CAACI,IAAN,CAAWK,MAHT;AAIVS,QAAAA,cAAc,EAAElB,KAAK,CAACI,IAAN,CAAWc,cAJjB;AAKVP,QAAAA,KAAK,EAAEX,KAAK,CAACI,IAAN,CAAWO;AALR,OAAD,CAAX;AAOD,KATuB,EASrB,GATqB,CAAxB;AAUA,WAAO,MAAMQ,YAAY,CAACL,KAAD,CAAzB;AACD,GAZQ,EAYN,CAACd,KAAK,CAACI,IAAP,CAZM,CAAT,CAhB8B,CA8B9B;AACA;;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAACa,QAAD,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgC,SAAD,EAAYC,YAAZ,IAA4BjC,QAAQ,CAACa,QAAQ,CAACG,GAAV,CAA1C;;AAEA,QAAMkB,eAAe,GAAI1B,KAAD,IAAW;AACjC,UAAM2B,KAAK,GAAG3B,KAAK,CAAC2B,KAApB;AACA,UAAMtB,QAAQ,GAAGL,KAAK,CAAC4B,KAAvB;AACA,UAAMN,OAAO,GAAGtB,KAAK,CAACsB,OAAtB;AACA,UAAMO,SAAS,GAAG7B,KAAK,CAAC8B,KAAxB;AAEA,wBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAAT;AAAiC,MAAA,SAAS,EAAE,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KADH,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAE,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,OAAO,GAAGO,SAAH,GAAexB,QADzB,CAJF,CADF;AAUD,GAhBD;;AAkBA,QAAM4B,iBAAiB,GAAG,CAAC;AAAEL,IAAAA;AAAF,GAAD,KAAe;AACvC,wBACE;AACE,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEN,KAHT;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,OAAO,EAAEvB,QAAQ,CAACI,MAAT,KAAoBmB,KAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVD;;AAYA,WAASO,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,QAAIC,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,KAAR,CAAR;AACA,WAAO,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASH,CAAC,CAAC,CAAD,CAAV,EAAe,EAAEA,CAAC,CAAC,CAAD,CAAlB,EAAuBA,CAAC,CAAC,CAAD,CAAxB,EAA6BA,CAAC,CAAC,CAAD,CAA9B,EAAmCA,CAAC,CAAC,CAAD,CAApC,EAAyCA,CAAC,CAAC,CAAD,CAA1C,EAA+CA,CAAC,CAAC,CAAD,CAAhD,CAAT,CAAP;AACD;;AAED,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,aAASC,GAAT,CAAaC,CAAb,EAAgB;AACd,aAAO,CAACA,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAA7B;AACD;;AACD,WACED,GAAG,CAACD,CAAC,CAACG,UAAF,EAAD,CAAH,GACA,GADA,GAEAF,GAAG,CAACD,CAAC,CAACI,WAAF,KAAkB,CAAnB,CAFH,GAGA,GAHA,GAIAJ,CAAC,CAACK,cAAF,EALF;AAOD;;AAED,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACAvB,IAAAA,YAAY,CAACU,cAAc,CAACnC,KAAK,CAACI,IAAN,CAAWI,GAAZ,CAAf,CAAZ,CAF4B,CAG5B;;AACAa,IAAAA,UAAU,CAAChB,QAAD,CAAV;AACAkB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAND;;AAQA,QAAM0B,aAAa,GAAG,MAAM;AAC1BnD,IAAAA,gBAAgB,CACdG,MADc,EAEd,KAFc,EAGdI,QAAQ,CAACE,IAHK,EAIdF,QAAQ,CAACI,MAJK,EAKdJ,QAAQ,CAACG,GALK,EAMdH,QAAQ,CAACa,cANK,EAOdb,QAAQ,CAACM,KAPK,CAAhB,CAQEuC,IARF,CAQQC,MAAD,IAAY;AACjBnC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBkC,MAAzB;AACAnD,MAAAA,KAAK,CAACoD,QAAN,GAFiB,CAGjB;AACD,KAZD;AAaA7B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAfD;;AAiBA,QAAM8B,eAAe,GAAG,MAAM;AAC5B/C,IAAAA,WAAW,CAACc,OAAD,CAAX;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAM+B,UAAU,GAAG,MAAM;AACvB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,eADT;AAEE,MAAA,KAAK,EAAE,CAAC,CAACjD,QAAQ,CAACG,GAAX,IAAkBiC,YAAY,CAACN,cAAc,CAAC9B,QAAQ,CAACG,GAAV,CAAf,CAFvC;AAGE,MAAA,OAAO,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,QADT;AAEE,MAAA,KAAK,EAAEH,QAAQ,CAACI,MAFlB;AAGE,MAAA,OAAO,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAsBE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,OADT;AAEE,MAAA,KAAK,EAAEJ,QAAQ,CAACM,KAFlB;AAGE,MAAA,OAAO,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CADF;AA+BD,GAhCD;;AAkCA,QAAM4C,iBAAiB,GAAG,MAAM;AAC9B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,OADT;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,eACH;AACE,QAAA,SAAS,EAAE,cADb;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAElD,QAAQ,CAACE,IAJlB;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,QAAQ,EAAGiD,CAAD,IAAO;AACflD,UAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,YAAAA,IAAI,EAAEiD,CAAC,CAACC,MAAF,CAAS7B;AAA9B,WAAD,CAAX;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,QAAvB,EAAiCmD,CAAC,CAACC,MAAF,CAAS7B,KAA1C;AACD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAmBE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,gBADT;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,eACH,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE,cADb;AAEE,QAAA,QAAQ,EAAEJ,SAFZ;AAGE,QAAA,QAAQ,EAAGkC,IAAD,IAAU;AAClBjC,UAAAA,YAAY,CAACiC,IAAD,CAAZ;AACAC,UAAAA,UAAU,CAACD,IAAD,CAAV;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,eAkCE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,SADT;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,eACH;AACE,QAAA,QAAQ,EAAGF,CAAD,IACRlD,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,MAAM,EAAE+C,CAAC,CAACC,MAAF,CAAS7B;AAAhC,SAAD,CAFf;AAIE,QAAA,SAAS,EAAE,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,oBAMuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANvC,eAOE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,0BAQE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,WAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,eAmDE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,iBADT;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,eACH;AACE,QAAA,SAAS,EAAE,cADb;AAEE,QAAA,WAAW,EAAC,+BAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEvB,QAAQ,CAACa,cAJlB;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,QAAQ,EAAGsC,CAAD,IAAO;AACflD,UAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAea,YAAAA,cAAc,EAAEsC,CAAC,CAACC,MAAF,CAAS7B;AAAxC,WAAD,CAAX;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,QAAvB;AACD,SATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,eAqEE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE,QADT;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,eACH;AACE,QAAA,SAAS,EAAE,WADb;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEA,QAAQ,CAACM,KAJlB;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,IAAI,EAAE,CANR;AAOE,QAAA,QAAQ,EAAG6C,CAAD,IAAO;AACflD,UAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,YAAAA,KAAK,EAAE6C,CAAC,CAACC,MAAF,CAAS7B;AAA/B,WAAD,CAAX;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,QAAvB;AACD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArEF,CADF;AA0FD,GA3FD;;AA6FA,QAAMsD,UAAU,GAAID,IAAD,IAAU;AAC3B,UAAME,aAAa,GACjBF,IAAI,CAACG,WAAL,GAAmBC,QAAnB,KACA,GADA,GAEA,CAACJ,IAAI,CAACK,QAAL,KAAkB,CAAnB,EAAsBD,QAAtB,EAFA,GAGA,GAHA,GAIAJ,IAAI,CAACM,OAAL,GAAeF,QAAf,EALF;AAMA9C,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB2C,aAAzB;AACAtD,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,GAAG,EAAEoD;AAApB,KAAD,CAAX;AACD,GATD;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,aAAa,EAAE,EADV;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,IAAI,EAAE,CAHD;AAILC,MAAAA,aAAa,EAAE;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAErC,MAAAA,MAAM,EAAE,CAAV;AAAaD,MAAAA,IAAI,EAAE;AAAnB,KAAT;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIGT,OAAO,gBACN,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,KAAK,EAAE;AACLgD,MAAAA,UAAU,EAAE,QADP;AAELJ,MAAAA,OAAO,EAAE,MAFJ;AAGLK,MAAAA,cAAc,EAAE;AAHX,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,OAAO,EAAEtB,aAHX;AAIE,IAAA,KAAK,EAAE;AAAEuB,MAAAA,WAAW,EAAE;AAAf,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAiBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAC,iBAFV;AAGE,IAAA,OAAO,EAAEnB,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADM,gBA2BN,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,KAAK,EAAE;AACLiB,MAAAA,UAAU,EAAE,QADP;AAELJ,MAAAA,OAAO,EAAE,MAFJ;AAGLK,MAAAA,cAAc,EAAE;AAHX,KAHT;AAQE,IAAA,OAAO,EAAEvB,eARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAM,IAAA,KAAK,EAAE;AAAEyB,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,SAAV;AAAqBF,MAAAA,KAAK,EAAE;AAA5B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CA/BJ,CARF,EAsDGnD,OAAO,GAAGiC,iBAAiB,EAApB,GAAyBD,UAAU,EAtD7C,CADF,CADF;AA4DD,CAxTD;;AA0TA,eAAevD,YAAf;AAEAA,YAAY,CAAC6E,YAAb,GAA4B;AAC1BC,EAAAA,SAAS,EAAE;AACTtE,IAAAA,IAAI,EAAE,aADG;AAETW,IAAAA,cAAc,EAAE,uBAFP;AAGTT,IAAAA,MAAM,EAAE,OAHC;AAITD,IAAAA,GAAG,EAAE,YAJI;AAKTG,IAAAA,KAAK,EAAE;AALE;AADe,CAA5B","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FaEdit } from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport { editAboutInfoAPI } from \"../DB/API\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../Styles/AboutSection.scss\";\n\nconst AboutSection = (props) => {\n  //const data = props.data;\n  const doc_Id = props.id;\n  const dataRecieved = props.data == [];\n  //    console.log(\"Prop ID\", props.data, dataRecieved)\n  // const [data, setData] = useState(props.qualificationData);\n  const [aboutVal, setAboutVal] = useState({\n    name: \"\",\n    dob: \"\",\n    gender: \"\",\n    specilization: \"\",\n    about: \"\",\n  });\n  const [displayDOB, setDisplayDOB] = useState(\"\");\n  //    const [aboutVal, setAboutVal] = useState({...props.data});\n  // const [oneTime,setOneTime]=useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log(\"changesss\", props.data, aboutVal);\n      setAboutVal({\n        name: props.data.name,\n        dob: props.data.dob,\n        gender: props.data.gender,\n        specialization: props.data.specialization,\n        about: props.data.about,\n      });\n    }, 200);\n    return () => clearTimeout(timer);\n  }, [props.data]);\n\n  // console.log(\"about val \",aboutVal);\n  // console.log(\"my about data is: \", aboutVal);\n  const [prevVal, setPrevVal] = useState(aboutVal);\n  const [editing, setEditing] = useState(false);\n  const [startDate, setStartDate] = useState(aboutVal.dob);\n\n  const AboutSectionRow = (props) => {\n    const label = props.label;\n    const aboutVal = props.value;\n    const editing = props.editing;\n    const editField = props.input;\n\n    return (\n      <Row className={\"about-row\"}>\n        <Col lg={{ span: 2, offset: 1 }} className={\"label\"}>\n          {label}\n        </Col>\n        <Col lg={8} className={\"display-value\"}>\n          {editing ? editField : aboutVal}\n        </Col>\n      </Row>\n    );\n  };\n\n  const GenderRadioButton = ({ value }) => {\n    return (\n      <input\n        style={{ width: 20 }}\n        type=\"radio\"\n        value={value}\n        name=\"gender\"\n        checked={aboutVal.gender === value}\n      />\n    );\n  };\n\n  function parseISOString(s) {\n    var b = s.split(/\\D+/);\n    return new Date(Date.UTC(b[0], --b[1], b[2], b[3], b[4], b[5], b[6]));\n  }\n\n  function isoFormatDMY(d) {\n    function pad(n) {\n      return (n < 10 ? \"0\" : \"\") + n;\n    }\n    return (\n      pad(d.getUTCDate()) +\n      \"/\" +\n      pad(d.getUTCMonth() + 1) +\n      \"/\" +\n      d.getUTCFullYear()\n    );\n  }\n\n  const handleAboutEdit = () => {\n    // console.log(\"Time managing: \", (new Date(\"1992-10-03\")), \"Dob prop:\", startDate);\n    setStartDate(parseISOString(props.data.dob));\n    // console.log(\"MyDate: \",props.data.dob,\"ISO: \", parseISOString(props.data.dob),\"isoDMY:\", isoFormatDMY(parseISOString(props.data.dob)) );\n    setPrevVal(aboutVal);\n    setEditing(true);\n  };\n\n  const handleSaveBtn = () => {\n    editAboutInfoAPI(\n      doc_Id,\n      \"PUT\",\n      aboutVal.name,\n      aboutVal.gender,\n      aboutVal.dob,\n      aboutVal.specialization,\n      aboutVal.about\n    ).then((result) => {\n      console.log(\"About api\", result);\n      props.callback();\n      //  setAboutVal(result);\n    });\n    setEditing(false);\n  };\n\n  const handleCancelBtn = () => {\n    setAboutVal(prevVal);\n    setEditing(false);\n  };\n\n  const renderItem = () => {\n    return (\n      <div>\n        {/* <Row style={styles.about_row}>\n                <Col lg={{span:2, offset:1}} style={styles.label}>Name:</Col>\n                <Col lg={8} style={styles.display_value}>{data.name}</Col>\n            </Row> */}\n\n        <AboutSectionRow\n          label={\"Date of Birth\"}\n          value={!!aboutVal.dob && isoFormatDMY(parseISOString(aboutVal.dob))}\n          editing={false}\n        />\n\n        <AboutSectionRow\n          label={\"Gender\"}\n          value={aboutVal.gender}\n          editing={false}\n        />\n        {/* <Row style={styles.about_row}>\n                <Col lg={{span:2, offset:1}} style={styles.label}>Specialization:</Col>\n                <Col lg={8} style={styles.display_value}>{data.specialization}</Col>\n            </Row> */}\n\n        <AboutSectionRow\n          label={\"About\"}\n          value={aboutVal.about}\n          editing={false}\n        />\n        {/* {refresh()} */}\n      </div>\n    );\n  };\n\n  const renderEditingItem = () => {\n    return (\n      <div>\n        <AboutSectionRow\n          label={\"Name:\"}\n          editing={true}\n          input={\n            <input\n              className={\"input__about\"}\n              placeholder=\"Enter Your Name ...\"\n              type=\"text\"\n              value={aboutVal.name}\n              noValidate\n              onChange={(e) => {\n                setAboutVal({ ...aboutVal, name: e.target.value });\n                console.log(\"changes\", aboutVal, e.target.value);\n              }}\n            />\n          }\n        />\n\n        <AboutSectionRow\n          label={\"Date of Birth:\"}\n          editing={true}\n          input={\n            <DatePicker\n              className={\"input__about\"}\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n                formatDate(date);\n              }}\n            />\n          }\n        />\n\n        <AboutSectionRow\n          label={\"Gender:\"}\n          editing={true}\n          input={\n            <div\n              onChange={(e) =>\n                setAboutVal({ ...aboutVal, gender: e.target.value })\n              }\n              className={\"input__about\"}\n            >\n              <GenderRadioButton value={\"Male\"} /> <span>Male</span>\n              <GenderRadioButton value={\"Female\"} /> Female\n              <GenderRadioButton value={\"Other\"} /> Other\n            </div>\n          }\n        />\n\n        <AboutSectionRow\n          label={\"Specialization:\"}\n          editing={true}\n          input={\n            <input\n              className={\"input__about\"}\n              placeholder=\"Enter Your specialization ...\"\n              type=\"text\"\n              value={aboutVal.specialization}\n              noValidate\n              onChange={(e) => {\n                setAboutVal({ ...aboutVal, specialization: e.target.value });\n                console.log(\"changes\", aboutVal);\n              }}\n            />\n          }\n        />\n\n        <AboutSectionRow\n          label={\"About:\"}\n          editing={true}\n          input={\n            <textarea\n              className={\"text-area\"}\n              placeholder=\"Enter About Yourself ...\"\n              type=\"text\"\n              value={aboutVal.about}\n              noValidate\n              rows={3}\n              onChange={(e) => {\n                setAboutVal({ ...aboutVal, about: e.target.value });\n                console.log(\"changes\", aboutVal);\n              }}\n            />\n          }\n        />\n      </div>\n    );\n  };\n\n  const formatDate = (date) => {\n    const formattedDate =\n      date.getFullYear().toString() +\n      \"/\" +\n      (date.getMonth() + 1).toString() +\n      \"/\" +\n      date.getDate().toString();\n    console.log(\"New date:\", formattedDate);\n    setAboutVal({ ...aboutVal, dob: formattedDate });\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          paddingBottom: 20,\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n        }}\n      >\n        <Row style={{ margin: 0 }}>\n          <Col lg={{ offset: 1, span: 7 }} xs={4}>\n            <h4>About</h4>\n          </Col>\n          {editing ? (\n            <Col\n              lg={3}\n              xs={8}\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n            >\n              <Button\n                size=\"sm\"\n                variant=\"primary\"\n                onClick={handleSaveBtn}\n                style={{ marginRight: 5 }}\n              >\n                Save changes\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline-primary\"\n                onClick={handleCancelBtn}\n              >\n                Cancel\n              </Button>\n            </Col>\n          ) : (\n            <Col\n              lg={3}\n              xs={8}\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n              }}\n              onClick={handleAboutEdit}\n            >\n              <span style={{ color: \"#e0004d\", paddingRight: 10 }}>Edit</span>\n              <FaEdit style={{ cursor: \"pointer\", color: \"#e0004d\" }}></FaEdit>\n            </Col>\n          )}\n        </Row>\n        {editing ? renderEditingItem() : renderItem()}\n      </div>\n    </div>\n  );\n};\n\nexport default AboutSection;\n\nAboutSection.defaultProps = {\n  aboutData: {\n    name: \"Doctor Name\",\n    specialization: \"Doctor Specialization\",\n    gender: \"Other\",\n    dob: \"1992/10/03\",\n    about: \"about\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}
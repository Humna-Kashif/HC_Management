{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Screens/DoctorPatientsTab.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row, Container, Tab, Tabs, Button, Modal, ModalBody } from \"react-bootstrap\";\nimport PatientList from \"../Components/PatientList\";\nimport PatientDash from \"../Components/PatientDash\";\nimport PatientProfileHeader from \"../Components/PatientProfileHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAllPatientsOfDoctorByName, getImage } from \"../DB/API\";\nimport PatientTabItem from \"../Components/PatientTabItem\";\nimport PatientTabDetail from \"../Components/PatientTabDetail\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport \"../Styles/NewPatientModal.scss\";\n\nconst DoctorPatientsTab = props => {\n  const doc_ID = useLocation().state.userId;\n  const [patientsList, setPatientsList] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(0);\n  const [input, setInput] = useState(\"\");\n  const [newPatient, setNewPatient] = useState({\n    name: \"\",\n    dob: \"\",\n    gender: \"\",\n    phone: \"\"\n  });\n  const [startDate, setStartDate] = useState();\n  const [showAddPatientModal, setAddPatientModal] = useState(false);\n  const [isaccess, setIsAccess] = useState(false);\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      console.log(\"Input: \", input);\n      setInput(\"\");\n    }\n  };\n\n  const getPatientFromAPI = input => {\n    getAllPatientsOfDoctorByName(doc_ID, 0, 0, input, \"GET\").then(result => {\n      let filteredList = filterPatientsList(input, result);\n      setIsAccess(result[0].is_access);\n      console.log(\"filtered list is : \", result[0].is_access);\n      setPatientsList(filteredList);\n\n      if (filteredList.length !== 0) {\n        setSelectedPatient(filteredList[0].patientinfo);\n      } else {\n        setSelectedPatient(0);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getPatientFromAPI(input);\n  }, []);\n\n  const filterPatientsList = (input, resultList) => {\n    console.log(\"Recieved Data\", resultList);\n    let filteredList = [];\n    let regex = new RegExp(input, 'i');\n\n    if (resultList !== []) {\n      resultList.map(item => {\n        if (!!item.patientinfo) {\n          console.log(\"Recieved Data patient\", item);\n          !!item.patientinfo.name.match(regex) && filteredList.push(item);\n        }\n      });\n    }\n\n    console.log(\"Patient Tab search filtered\", filteredList);\n    return filteredList;\n  };\n\n  const handleSelectPatient = info => {\n    console.log(\"clicked\", info);\n    setSelectedPatient(info);\n  };\n\n  const renderPatientsList = () => {\n    // console.log(\"Clicked list is : \",patientsList)\n    return patientsList.map((item, i) => /*#__PURE__*/React.createElement(PatientTabItem, {\n      info: item.patientinfo,\n      access: item.is_access,\n      handleAccess: setIsAccess,\n      handleItem: handleSelectPatient,\n      selected: item.patientinfo.patient_id === selectedPatient.patient_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  const formatDate = date => {\n    const formattedDate = date.getFullYear().toString() + \"/\" + (date.getMonth() + 1).toString() + \"/\" + date.getDate().toString();\n    console.log(\"New date:\", formattedDate);\n    setNewPatient({ ...newPatient,\n      dob: formattedDate\n    });\n  };\n\n  const handleAddPatient = newPatient => {\n    setAddPatientModal(true);\n  };\n\n  const handleModalClose = () => {\n    setAddPatientModal(false);\n  };\n\n  const handleConfirmNewPatient = newPatient => {\n    console.log(\"New Patient: \", newPatient);\n    handleModalClose();\n  };\n\n  const renderModal = () => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: showAddPatientModal,\n      onHide: handleModalClose,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      style: {\n        color: \"#e0004d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Add New Patient\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"modal-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 2,\n        offset: 1\n      },\n      className: \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"modal-input__value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"modal-input__field\",\n      placeholder: \"Enter Patient Name...\",\n      type: \"text\",\n      onChange: e => {\n        setNewPatient({ ...newPatient,\n          name: e.target.value\n        });\n        console.log(\"changes\", newPatient, e.target.value);\n      } // Make sure  to validate\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"modal-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 2,\n        offset: 1\n      },\n      className: \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Date of Birth:\"), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"modal-input__value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"modal-input__field\",\n      selected: startDate,\n      placeholderText: \"MM/DD/YYYY\",\n      onChange: date => {\n        setStartDate(date);\n        formatDate(date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"modal-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 2,\n        offset: 1\n      },\n      className: \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \"Gender:\"), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"modal-input__value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onChange: e => setNewPatient({ ...newPatient,\n        gender: e.target.value\n      }),\n      className: \"modal-input__field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: 20\n      },\n      type: \"radio\",\n      value: \"Male\",\n      name: \"gender\",\n      checked: newPatient.gender === \"Male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"Male\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: 20\n      },\n      type: \"radio\",\n      value: \"Female\",\n      name: \"gender\",\n      checked: newPatient.gender === \"Female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }), \" \", \"Female\", /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: 20\n      },\n      type: \"radio\",\n      value: \"Other\",\n      name: \"gender\",\n      checked: newPatient.gender === \"Other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }), \" \", \"Other\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"modal-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 2,\n        offset: 1\n      },\n      className: \"modal-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"Phone Number:\"), /*#__PURE__*/React.createElement(Col, {\n      lg: 8,\n      className: \"modal-input__value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"modal-input__field\",\n      placeholder: \"03001234567\",\n      type: \"text\",\n      onChange: e => {\n        setNewPatient({ ...newPatient,\n          phone: e.target.value\n        });\n        console.log(\"changes\", newPatient, e.target.value);\n      } // Make sure  to validate\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => handleConfirmNewPatient(newPatient),\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }\n    }, \"Add New Patient\")));\n  };\n\n  const renderDetail = () => {\n    return selectedPatient !== 0 ? /*#__PURE__*/React.createElement(PatientTabDetail, {\n      patientInfo: selectedPatient,\n      key: selectedPatient.patient_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#e0e0e0\",\n        fontSize: 50,\n        padding: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    }, \"Select Patient From The List For Details.\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    style: {\n      minheight: \"90vh\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      position: \"relative\",\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 2,\n    style: {\n      height: \"90vh\",\n      overflowY: \"auto\",\n      position: \"sticky\",\n      top: 65,\n      margin: 0,\n      padding: 0,\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      borderStyle: \"solid\",\n      borderColor: \"#e0e0e0\",\n      borderWidth: 0.6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"sticky\",\n      zIndex: 10,\n      backgroundColor: \"white\",\n      top: 0,\n      padding: 15,\n      paddingTop: 10,\n      paddingBottom: 10,\n      borderBottomColor: \"#e0e0e0\",\n      borderBottomWidth: 0.6,\n      borderBottomStyle: \"solid\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-new-patient\",\n    onClick: () => handleAddPatient(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FaPlusCircle, {\n    size: 15,\n    className: \"add-new-patient__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"add-new-patient__label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, \"Add New Patient\")), /*#__PURE__*/React.createElement(\"input\", {\n    style: styles.input,\n    placeholder: `Filter Patient...`,\n    type: \"text\",\n    value: input,\n    onKeyDown: handleKeyDown,\n    noValidate: true,\n    onChange: e => {\n      setInput(e.target.value);\n      getPatientFromAPI(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      borderBottomColor: \"#e0e0e0\",\n      borderBottomWidth: 0.6,\n      borderBottomStyle: \"solid\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, renderPatientsList())), /*#__PURE__*/React.createElement(Col, {\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      borderStyle: \"solid\",\n      borderColor: \"#e0e0e0\",\n      borderWidth: 0.6,\n      marginLeft: 10,\n      minHeight: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, isaccess !== false ? renderDetail() : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#e0e0e0\",\n      fontSize: 50,\n      padding: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, \"You dont have access to this Patient\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#e0e0e0\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"e0004d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, \"Request Access\")))))), renderModal()));\n};\n\nexport default DoctorPatientsTab;\nconst styles = {\n  input: {\n    fontSize: 14,\n    padding: 8,\n    borderRadius: \"5px\",\n    boxShadow: \"none\"\n  }\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Screens/DoctorPatientsTab.js"],"names":["React","useEffect","useState","Col","Row","Container","Tab","Tabs","Button","Modal","ModalBody","PatientList","PatientDash","PatientProfileHeader","useLocation","getAllPatientsOfDoctorByName","getImage","PatientTabItem","PatientTabDetail","DatePicker","FaPlusCircle","DoctorPatientsTab","props","doc_ID","state","userId","patientsList","setPatientsList","selectedPatient","setSelectedPatient","input","setInput","newPatient","setNewPatient","name","dob","gender","phone","startDate","setStartDate","showAddPatientModal","setAddPatientModal","isaccess","setIsAccess","handleKeyDown","event","key","console","log","getPatientFromAPI","then","result","filteredList","filterPatientsList","is_access","length","patientinfo","resultList","regex","RegExp","map","item","match","push","handleSelectPatient","info","renderPatientsList","i","patient_id","formatDate","date","formattedDate","getFullYear","toString","getMonth","getDate","handleAddPatient","handleModalClose","handleConfirmNewPatient","renderModal","color","span","offset","e","target","value","width","marginLeft","renderDetail","fontSize","padding","paddingTop","minheight","position","margin","height","overflowY","top","backgroundColor","borderRadius","borderStyle","borderColor","borderWidth","zIndex","paddingBottom","borderBottomColor","borderBottomWidth","borderBottomStyle","styles","minHeight","boxShadow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Container,\n  Tab,\n  Tabs,\n  Button,\n  Modal,\n  ModalBody,\n} from \"react-bootstrap\";\nimport PatientList from \"../Components/PatientList\";\nimport PatientDash from \"../Components/PatientDash\";\nimport PatientProfileHeader from \"../Components/PatientProfileHeader\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAllPatientsOfDoctorByName,getImage } from \"../DB/API\";\nimport PatientTabItem from \"../Components/PatientTabItem\";\nimport PatientTabDetail from \"../Components/PatientTabDetail\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FaPlusCircle } from \"react-icons/fa\";\nimport \"../Styles/NewPatientModal.scss\";\n\nconst DoctorPatientsTab = (props) => {\n  const doc_ID = useLocation().state.userId;\n  const [patientsList, setPatientsList] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(0);\n  const [input, setInput] = useState(\"\");\n  const [newPatient, setNewPatient] = useState({\n    name: \"\",\n    dob: \"\",\n    gender: \"\",\n    phone: \"\",\n  });\n  const [startDate, setStartDate] = useState();\n  const [showAddPatientModal, setAddPatientModal] = useState(false);\n  const [isaccess, setIsAccess] = useState(false);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      console.log(\"Input: \", input);\n      setInput(\"\");\n    }\n  };\n\n  const getPatientFromAPI = (input) => {\n    getAllPatientsOfDoctorByName(doc_ID, 0, 0,input, \"GET\").then((result) => {\n      let filteredList = filterPatientsList(input,result)\n      setIsAccess(result[0].is_access)\n      console.log(\"filtered list is : \",result[0].is_access)\n      setPatientsList(filteredList);\n      if(filteredList.length !== 0){\n        setSelectedPatient(filteredList[0].patientinfo);\n      }else{\n        setSelectedPatient(0)\n      }\n    });\n  }\n  useEffect(() => {\n    getPatientFromAPI(input);\n  }, []);\n\n  const filterPatientsList = (input,resultList) => {\n    console.log(\"Recieved Data\", resultList)\n    let filteredList = [];\n    let regex =  new RegExp(input,'i');\n    if(resultList !== []){\n      resultList.map((item)=> {\n        if(!!item.patientinfo){\n          console.log(\"Recieved Data patient\", item)\n          !!item.patientinfo.name.match(regex) && filteredList.push(item)\n        }\n      })\n    }\n    \n    console.log(\"Patient Tab search filtered\", filteredList);\n    return filteredList;\n  }\n\n  const handleSelectPatient = (info) => {\n    console.log(\"clicked\", info);\n    setSelectedPatient(info);\n\n  };\n\n  const renderPatientsList = () => {\n    // console.log(\"Clicked list is : \",patientsList)\n    return patientsList.map((item, i) => (\n      <PatientTabItem\n        info={item.patientinfo}\n        access={item.is_access}\n        handleAccess={setIsAccess}\n        handleItem={handleSelectPatient}\n        selected={item.patientinfo.patient_id === selectedPatient.patient_id}\n      />\n    ));\n  };\n\n  const formatDate = (date) => {\n    const formattedDate =\n      date.getFullYear().toString() +\n      \"/\" +\n      (date.getMonth() + 1).toString() +\n      \"/\" +\n      date.getDate().toString();\n    console.log(\"New date:\", formattedDate);\n    setNewPatient({ ...newPatient, dob: formattedDate });\n  };\n\n  const handleAddPatient = (newPatient) => {\n    setAddPatientModal(true);\n  };\n\n  const handleModalClose = () => {\n    setAddPatientModal(false);\n  };\n\n  const handleConfirmNewPatient = (newPatient) => {\n    console.log(\"New Patient: \", newPatient);\n\n    handleModalClose();\n  };\n\n  const renderModal = () => {\n    return (\n      <Modal\n        show={showAddPatientModal}\n        onHide={handleModalClose}\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title style={{ color: \"#e0004d\" }}>\n            Add New Patient\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Row className={\"modal-input\"}>\n            <Col lg={{ span: 2, offset: 1 }} className={\"modal-label\"}>\n              Name:\n            </Col>\n            <Col lg={8} className={\"modal-input__value\"}>\n              <input\n                className={\"modal-input__field\"}\n                placeholder=\"Enter Patient Name...\"\n                type=\"text\"\n                onChange={(e) => {\n                  setNewPatient({ ...newPatient, name: e.target.value });\n                  console.log(\"changes\", newPatient, e.target.value);\n                }}\n                // Make sure  to validate\n              />\n            </Col>\n          </Row>\n\n          <Row className={\"modal-input\"}>\n            <Col lg={{ span: 2, offset: 1 }} className={\"modal-label\"}>\n              Date of Birth:\n            </Col>\n            <Col lg={8} className={\"modal-input__value\"}>\n              <DatePicker\n                className={\"modal-input__field\"}\n                selected={startDate}\n                placeholderText={\"MM/DD/YYYY\"}\n                onChange={(date) => {\n                  setStartDate(date);\n                  formatDate(date);\n                }}\n              />\n            </Col>\n          </Row>\n\n          <Row className={\"modal-input\"}>\n            <Col lg={{ span: 2, offset: 1 }} className={\"modal-label\"}>\n              Gender:\n            </Col>\n            <Col lg={8} className={\"modal-input__value\"}>\n              <div\n                onChange={(e) =>\n                  setNewPatient({ ...newPatient, gender: e.target.value })\n                }\n                className={\"modal-input__field\"}\n              >\n                <input\n                  style={{ width: 20 }}\n                  type=\"radio\"\n                  value={\"Male\"}\n                  name=\"gender\"\n                  checked={newPatient.gender === \"Male\"}\n                />{\" \"}\n                <span>Male</span>\n                <input\n                  style={{ width: 20 }}\n                  type=\"radio\"\n                  value={\"Female\"}\n                  name=\"gender\"\n                  checked={newPatient.gender === \"Female\"}\n                />{\" \"}\n                Female\n                <input\n                  style={{ width: 20 }}\n                  type=\"radio\"\n                  value={\"Other\"}\n                  name=\"gender\"\n                  checked={newPatient.gender === \"Other\"}\n                />{\" \"}\n                Other\n              </div>\n            </Col>\n          </Row>\n\n          <Row className={\"modal-input\"}>\n            <Col lg={{ span: 2, offset: 1 }} className={\"modal-label\"}>\n              Phone Number:\n            </Col>\n            <Col lg={8} className={\"modal-input__value\"}>\n              <input\n                className={\"modal-input__field\"}\n                placeholder=\"03001234567\"\n                type=\"text\"\n                onChange={(e) => {\n                  setNewPatient({ ...newPatient, phone: e.target.value });\n                  console.log(\"changes\", newPatient, e.target.value);\n                }}\n                // Make sure  to validate\n              />\n            </Col>\n          </Row>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            onClick={() => handleConfirmNewPatient(newPatient)}\n            style={{ marginLeft: \"10px\" }}\n          >\n            Add New Patient\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }; \n\n  const renderDetail = () =>{\n    return(\n    selectedPatient !== 0 ? (\n      <PatientTabDetail\n        patientInfo={selectedPatient}\n        key={selectedPatient.patient_id}\n      />\n    ) : (\n      <div style={{ color: \"#e0e0e0\", fontSize: 50, padding: 100 }}>\n        Select Patient From The List For Details.\n      </div>\n    )\n    )\n  }\n\n  return (\n    <div style={{ width: \"100%\", paddingTop: 0 }}>\n      <Container fluid style={{ minheight: \"90vh\", position: \"relative\" }}>\n        <Row style={{ position: \"relative\", margin: 0, padding: 0 }}>\n          <Col\n            lg={2}\n            style={{\n              height: \"90vh\",\n              overflowY: \"auto\",\n              position: \"sticky\",\n              top: 65,\n              margin: 0,\n              padding: 0,\n              backgroundColor: \"white\",\n              borderRadius: 10,\n              borderStyle: \"solid\",\n              borderColor: \"#e0e0e0\",\n              borderWidth: 0.6,\n            }}\n          >\n            {/* You need to display a list here */}\n            <div\n              style={{\n                position: \"sticky\",\n                zIndex: 10,\n                backgroundColor: \"white\",\n                top: 0,\n                padding: 15,\n                paddingTop: 10,\n                paddingBottom: 10,\n                borderBottomColor: \"#e0e0e0\",\n                borderBottomWidth: 0.6,\n                borderBottomStyle: \"solid\",\n              }}\n            >\n              <div\n                className={\"add-new-patient\"}\n                onClick={() => handleAddPatient()}\n              >\n                <FaPlusCircle\n                  size={15}\n                  className={\"add-new-patient__icon\"}\n                ></FaPlusCircle>\n                <span className={\"add-new-patient__label\"}>\n                  Add New Patient\n                </span>\n              </div>\n              <input\n                style={styles.input}\n                placeholder={`Filter Patient...`}\n                type=\"text\"\n                value={input}\n                onKeyDown={handleKeyDown}\n                noValidate\n                onChange={(e) => {\n                  setInput(e.target.value);\n                  getPatientFromAPI(e.target.value);\n                }}\n              />\n            </div>\n            <div\n              style={{\n                borderBottomColor: \"#e0e0e0\",\n                borderBottomWidth: 0.6,\n                borderBottomStyle: \"solid\",\n              }}\n            >\n              {renderPatientsList()}\n              {/* {renderPatientsList()}\n              {renderPatientsList()}\n              {renderPatientsList()}\n              {renderPatientsList()}\n              {renderPatientsList()} */}\n            </div>\n            {/* <div style={{backgroundColor: \"lightgrey\", margin: 5, height: 100}}>item</div> */}\n          </Col>\n          <Col lg={10}>\n            <div\n              style={{\n                backgroundColor: \"white\",\n                borderRadius: 10,\n                borderStyle: \"solid\",\n                borderColor: \"#e0e0e0\",\n                borderWidth: 0.6,\n                marginLeft: 10,\n                minHeight: 300,\n              }}\n            >\n            {/* / */}\n            { isaccess!==false ? renderDetail() : (\n              <div>\n                <div style={{ color: \"#e0e0e0\", fontSize: 50, padding: 100 }}>\n                  You dont have access to this Patient\n                </div>\n                <div style={{ backgroundColor: \"#e0e0e0\",padding: 10}}>\n                  <Button style={{backgroundColor:\"e0004d\"}}>Request Access</Button>\n                </div>\n              </div>\n            )}\n            </div>\n          </Col>\n        </Row>\n        {renderModal()}\n      </Container>\n    </div>\n  );\n};\n\nexport default DoctorPatientsTab;\n\nconst styles = {\n  input: { fontSize: 14, padding: 8, borderRadius: \"5px\", boxShadow: \"none\" },\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/VitalTabPatient.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport VitalTile from \"./VitalTile\";\nimport VitalsList from './VitalsList';\nimport VitalsChart from './VitalsChart';\nimport { getVitalsAPI, addVitalAPI } from '../DB/API'; //{!!data.vital_current && data.vital_current.current_value}\n\nconst VitalTabPatient = props => {\n  const data = props.vitals;\n  const pat_Data = props.info;\n  console.log(\"patient info data...... \", data);\n  const [vitalValue, setVitalValue] = useState([]);\n  const [normalValue, setNormalValue] = useState(\"\");\n  const [vitalData, setVitalData] = useState([]);\n  const [selectedVital, setSelectedVital] = useState(0);\n\n  const handleCallBack = () => {\n    props.backCall();\n    return data.map(item =>\n    /*#__PURE__*/\n    //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n    React.createElement(VitalTile, {\n      itemData: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const getAllVitalsValues = vital_id => {\n    //console.log(\"patient id \",patient_id,\" vital id \",vital_id);\n    setSelectedVital(vital_id);\n    getVitalsAPI(pat_Data.patient_id, vital_id, \"GET\").then(result => {\n      console.log(\"Vitals Values results\", result);\n\n      if (result.length !== 0) {\n        setVitalData(result);\n        setVitalValue(result[0].vital_data);\n        setNormalValue(result[0].vital_info.normal_range);\n      } // setVitalChart(renderVitalChart());\n\n    });\n  }; // useEffect(() => {\n  //     console.log(\"vitalsssss \",props.vitals)\n  //     // {!!props.vitals && getAllVitalsValues(props.vitals[0].vital_current.patient_id,props.vitals[0].vital_current.vital_id)}\n  // },props.vitals)\n\n\n  const renderVitalList = () => {\n    console.log(\"vitalsssss \", props.vitals);\n    return data.map(item =>\n    /*#__PURE__*/\n    //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n    React.createElement(VitalTile, {\n      itemData: item,\n      info: pat_Data,\n      onCallBAck: handleCallBack,\n      onTileSelect: getAllVitalsValues,\n      selected: item.vital_id === selectedVital,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }));\n  }; // const renderVitalChart = () =>{\n  //     return(\n  //         <VitalsChart data={vitalData} onTileSelect={getAllVitalsValues} />  \n  //             //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n  //             // <VitalTile itemData={item} info={pat_Data}  onCallBAck={handleCallBack} ></VitalTile>\n  //     )\n  // }\n\n\n  const renderVitals = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: 10,\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 43\n      }\n    }, \"Current Values\")), /*#__PURE__*/React.createElement(Col, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }\n    }, \"Date\")), /*#__PURE__*/React.createElement(Col, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 43\n      }\n    }, \"Normal Range\"))), vitalValue.map(item =>\n    /*#__PURE__*/\n    //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n    React.createElement(VitalsList, {\n      itemData: item,\n      range: normalValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })));\n  }; //  Chart Code\n  // const renderVitalsChart = () =>{\n  //     return(\n  //         vitalValue.map((item)=>(   \n  //             //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n  //             <VitalsChart itemData={item} range={normalValue} ></VitalsChart>\n  //         ))  \n  //     )\n  // }\n  // const renderEditingItem = () => {\n  //     return (\n  //         <div>\n  //             <Col style={styles.about_row}>\n  //                 <label style={styles.label}>Add Vitals:</label>\n  //                 <div style={styles.display_value}>\n  //                     <input style={styles.input}\n  //                         placeholder=\"Enter vital value ...\"\n  //                         type=\"text\"\n  //                         value={vitalValue}\n  //                         noValidate\n  //                         onChange={e => {setVitalValue(e.target.value)}}\n  //                         />\n  //                 </div>\n  //                 <Button style={{marginLeft:10}}>ADD</Button>\n  //             </Col>\n  //         </div>\n  //     )\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    style: {\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, renderVitalList()))), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, renderVitals(), /*#__PURE__*/React.createElement(VitalsChart, {\n    data: vitalData,\n    key: vitalValue.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default VitalTabPatient;\nVitalTabPatient.defaultProps = {\n  vitals: [{\n    vital_current: {\n      patient_id: 0,\n      vital_id: 1\n    }\n  }]\n};\nconst styles = {\n  label: {\n    fontSize: 18,\n    color: \"#e0004d\",\n    margin: 10,\n    textAlign: \"center\"\n  },\n  display_value: {\n    textAlign: \"left\"\n  },\n  about_row: {\n    alignItems: \"center\",\n    padding: 3,\n    minHeight: 40,\n    margin: 0,\n    display: \"flex\"\n  },\n  text_area: {\n    fontSize: 14,\n    paddingLeft: 8,\n    paddingRight: 8,\n    borderRadius: \"5px\",\n    outline: \"none\",\n    border: \"1px solid #cfcfcf\",\n    boxShadow: \"0px 5px 25px whitesmoke\",\n    backgroundColor: \"whitesmoke\",\n    width: \"100%\"\n  },\n  input: {\n    fontSize: 14,\n    padding: 8,\n    borderRadius: \"5px\"\n  }\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/VitalTabPatient.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","VitalTile","VitalsList","VitalsChart","getVitalsAPI","addVitalAPI","VitalTabPatient","props","data","vitals","pat_Data","info","console","log","vitalValue","setVitalValue","normalValue","setNormalValue","vitalData","setVitalData","selectedVital","setSelectedVital","handleCallBack","backCall","map","item","getAllVitalsValues","vital_id","patient_id","then","result","length","vital_data","vital_info","normal_range","renderVitalList","renderVitals","margin","display","flexDirection","alignItems","styles","label","paddingTop","flexWrap","defaultProps","vital_current","fontSize","color","textAlign","display_value","about_row","padding","minHeight","text_area","paddingLeft","paddingRight","borderRadius","outline","border","boxShadow","backgroundColor","width","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Col, Container, Row,Button } from \"react-bootstrap\";\nimport VitalTile from \"./VitalTile\";\nimport VitalsList from './VitalsList'\nimport VitalsChart from './VitalsChart'\nimport {getVitalsAPI,addVitalAPI} from '../DB/API'\n\n//{!!data.vital_current && data.vital_current.current_value}\n\nconst VitalTabPatient = (props) => {\n    const data = props.vitals;\n    const pat_Data=props.info;\n    console.log(\"patient info data...... \",data);\n    const [vitalValue,setVitalValue] = useState([]);\n    const [normalValue,setNormalValue] = useState(\"\");\n    const [vitalData,setVitalData] = useState([]);\n    const [selectedVital, setSelectedVital] = useState(0);\n\n    const handleCallBack = () => {\n        props.backCall();\n        return(\n            data.map((item)=>(   \n                //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n                <VitalTile itemData={item}></VitalTile>\n            ))\n        )\n    }\n\n\n    const getAllVitalsValues = (vital_id) =>{\n        //console.log(\"patient id \",patient_id,\" vital id \",vital_id);\n        setSelectedVital(vital_id);\n        getVitalsAPI(pat_Data.patient_id,vital_id,\"GET\").then(result => {\n            console.log(\"Vitals Values results\",result);\n            if(result.length !== 0){\n                setVitalData(result);\n                setVitalValue(result[0].vital_data);\n                setNormalValue(result[0].vital_info.normal_range);\n            }\n            // setVitalChart(renderVitalChart());\n        });\n    }\n\n    // useEffect(() => {\n    //     console.log(\"vitalsssss \",props.vitals)\n    //     // {!!props.vitals && getAllVitalsValues(props.vitals[0].vital_current.patient_id,props.vitals[0].vital_current.vital_id)}\n    // },props.vitals)\n\n    const renderVitalList = () =>{\n        console.log(\"vitalsssss \",props.vitals)\n        return(\n            data.map((item)=>(   \n                //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n                <VitalTile itemData={item} info={pat_Data}  onCallBAck={handleCallBack} onTileSelect={getAllVitalsValues} selected={item.vital_id===selectedVital}></VitalTile>\n            ))\n        )\n    }\n\n    // const renderVitalChart = () =>{\n    //     return(\n    //         <VitalsChart data={vitalData} onTileSelect={getAllVitalsValues} />  \n    //             //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n    //             // <VitalTile itemData={item} info={pat_Data}  onCallBAck={handleCallBack} ></VitalTile>\n    //     )\n    // }\n\n    const renderVitals = () =>{\n        return(\n            <div>\n            <Row style={{margin: 10,display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}}>\n                <Col style={styles.label}><b>Current Values</b></Col>\n                <Col style={styles.label}><b>Date</b></Col>\n                <Col style={styles.label}><b>Normal Range</b></Col>\n            </Row>\n               {vitalValue.map((item)=>(   \n                    //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n                    <VitalsList itemData={item} range={normalValue} ></VitalsList>\n                ))}\n                \n            </div>\n        )\n    }\n\n  //  Chart Code\n\n    // const renderVitalsChart = () =>{\n    //     return(\n    //         vitalValue.map((item)=>(   \n    //             //<VitalTile itemData={item} onTileSelect={handleVitalTile}></VitalTile>\n    //             <VitalsChart itemData={item} range={normalValue} ></VitalsChart>\n    //         ))  \n    //     )\n    // }\n\n    // const renderEditingItem = () => {\n    //     return (\n    //         <div>\n    //             <Col style={styles.about_row}>\n    //                 <label style={styles.label}>Add Vitals:</label>\n    //                 <div style={styles.display_value}>\n    //                     <input style={styles.input}\n    //                         placeholder=\"Enter vital value ...\"\n    //                         type=\"text\"\n    //                         value={vitalValue}\n    //                         noValidate\n    //                         onChange={e => {setVitalValue(e.target.value)}}\n    //                         />\n    //                 </div>\n    //                 <Button style={{marginLeft:10}}>ADD</Button>\n    //             </Col>\n    //         </div>\n    //     )\n    // }\n\n    \n\n     \n\n    return (\n      <Container fluid style={{paddingTop: 10}}> \n          {/* list */}\n          <Row>\n            <Col lg={6}>\n                {/* You need to display a list here */}\n                <Row>\n                    <Col style={{display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\"}}>\n                        {renderVitalList()}\n                    </Col>\n                </Row>\n            </Col>\n            <Col lg={6}>\n                {renderVitals()}\n                <VitalsChart data={vitalData} key={vitalValue.length}/>\n            </Col>\n          </Row>\n      </Container>\n    )\n}\n\nexport default VitalTabPatient\n\nVitalTabPatient.defaultProps = {\n    vitals:[\n        {\n            vital_current:{        \n                patient_id: 0,\n                vital_id: 1\n            }\n        }\n    ]\n}\n\nconst styles = {\n    label: {fontSize: 18, color: \"#e0004d\", margin:10,textAlign:\"center\"},\n    display_value: {textAlign: \"left\"},\n    about_row: {alignItems: \"center\", padding: 3, minHeight: 40, margin: 0,display:\"flex\"},\n    text_area: {\n        fontSize: 14,\n        paddingLeft: 8,\n        paddingRight: 8,\n        borderRadius: \"5px\",\n        outline: \"none\",\n        border: \"1px solid #cfcfcf\",\n        boxShadow: \"0px 5px 25px whitesmoke\",\n        backgroundColor: \"whitesmoke\",\n        width: \"100%\"\n    },\n    input: {fontSize:14, padding: 8,borderRadius: \"5px\"}\n}\n\n"]},"metadata":{},"sourceType":"module"}
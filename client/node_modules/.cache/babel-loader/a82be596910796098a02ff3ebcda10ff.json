{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/Tags/Tags.js\";\nimport React, { useState } from \"react\";\nimport TagItem from \"./TagItem\"; // import {deleteSymptomAPI} from \"../../DB/API\";\n\nconst Tags = props => {\n  const [TagsList, updateList] = useState(props.tagsList); // console.log(\"tags are \", TagsList);\n\n  const handleTag = val => {\n    console.log(\"tag call back val: \", val);\n    props.delete(val);\n    let newList = TagsList.slice(0);\n    console.log(\"OldList:\", TagsList, \"Newlist: \", newList);\n    newList.filter((c, i, a) => {\n      if (c.name === val) {\n        newList.splice(i, 1);\n      }\n    });\n    console.log(\"OldList:\", TagsList, \"Newlist: \", newList); // updateList(newList)\n\n    props.parentList(newList);\n  };\n\n  const renderTags = () => {\n    return TagsList.map((item, i) => /*#__PURE__*/React.createElement(TagItem, {\n      handleTag: handleTag,\n      itemData: item,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flex: 1,\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, renderTags());\n};\n\nexport default Tags;\nTags.defaultProps = {\n  tagsList: []\n};","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/Tags/Tags.js"],"names":["React","useState","TagItem","Tags","props","TagsList","updateList","tagsList","handleTag","val","console","log","delete","newList","slice","filter","c","i","a","name","splice","parentList","renderTags","map","item","display","flexDirection","flex","flexWrap","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAACG,KAAK,CAACG,QAAP,CAAvC,CADoB,CAEpB;;AACA,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACAL,IAAAA,KAAK,CAACQ,MAAN,CAAaH,GAAb;AACA,QAAII,OAAO,GAAGR,QAAQ,CAACS,KAAT,CAAe,CAAf,CAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,QAAxB,EAAkC,WAAlC,EAA+CQ,OAA/C;AACAA,IAAAA,OAAO,CAACE,MAAR,CAAe,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW;AACtB,UAAGF,CAAC,CAACG,IAAF,KAAWV,GAAd,EAAkB;AACdI,QAAAA,OAAO,CAACO,MAAR,CAAeH,CAAf,EAAkB,CAAlB;AACH;AACJ,KAJD;AAKAP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,QAAxB,EAAkC,WAAlC,EAA+CQ,OAA/C,EAVuB,CAWvB;;AACAT,IAAAA,KAAK,CAACiB,UAAN,CAAiBR,OAAjB;AACH,GAbD;;AAeA,QAAMS,UAAU,GAAG,MAAM;AACrB,WACAjB,QAAQ,CAACkB,GAAT,CAAa,CAACC,IAAD,EAAOP,CAAP,kBACT,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAET,SAApB;AAA+B,MAAA,QAAQ,EAAEgB,IAAzC;AAA+C,MAAA,GAAG,EAAEP,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,IAAI,EAAE,CAA9C;AAAiDC,MAAAA,QAAQ,EAAE;AAA3D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,UAAU,EADf,CADJ;AAKH,CA/BD;;AAiCA,eAAenB,IAAf;AAEAA,IAAI,CAAC0B,YAAL,GAAoB;AAChBtB,EAAAA,QAAQ,EAAG;AADK,CAApB","sourcesContent":["import React, { useState } from \"react\"\nimport TagItem from \"./TagItem\";\n// import {deleteSymptomAPI} from \"../../DB/API\";\n\nconst Tags = (props) => {\n    const [TagsList, updateList] = useState(props.tagsList);\n    // console.log(\"tags are \", TagsList);\n    const handleTag = (val) => {\n        console.log(\"tag call back val: \", val)\n        props.delete(val);\n        let newList = TagsList.slice(0);\n        console.log(\"OldList:\", TagsList, \"Newlist: \", newList);\n        newList.filter((c,i,a) => {\n            if(c.name === val){\n                newList.splice(i, 1);\n            }\n        });\n        console.log(\"OldList:\", TagsList, \"Newlist: \", newList);\n        // updateList(newList)\n        props.parentList(newList)\n    }\n\n    const renderTags = () => {\n        return (\n        TagsList.map((item, i) => \n            <TagItem handleTag={handleTag} itemData={item} key={i} />\n            )\n        )\n    }\n\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", flex: 1, flexWrap: \"wrap\"}}>\n            {renderTags()}\n        </div>\n    )\n}\n\nexport default Tags\n\nTags.defaultProps = {\n    tagsList : []\n}"]},"metadata":{},"sourceType":"module"}
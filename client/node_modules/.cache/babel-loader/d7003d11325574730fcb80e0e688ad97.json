{"ast":null,"code":"const doc_BaseURL = \"https://app.aibers.health/doctors/\";\nconst pat_BaseURL = \"https://app.aibers.health/patients/\";\nconst BaseURL = \"https://app.aibers.health\";\nconst headers = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n}; // export function API ( url) {\n//     return fetch(url).then(response => response.json())\n// }\n/////////////////////////////////////////////////// Profile Screen APIs ///////////////////////////////////////////////////////////////////\n//Get Doctor all info\n\nexport function GetDoctorAllInfoAPI(doc_id) {\n  return fetch(doc_BaseURL + doc_id + \"/profile\").then(response => response.json());\n} // For Edit doctor all info\n\nexport function editAboutInfoAPI(doc_id, APImethod, nameValue, genderValue, dobValue, specializationValue, aboutValue) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/info\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      name: nameValue,\n      gender: genderValue,\n      dob: dobValue,\n      specialization: specializationValue,\n      about: aboutValue\n    })\n  }).then(response => response.json());\n} // Get all Doctor Qualifications\n\nexport function qualificationsAPI(doc_id) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/qualifications\").then(response => response.json());\n} // For adding a new facility\n\nexport function addQualificationAPI(doc_id, APImethod, QualificationValue) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/qualifications\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      qualification: QualificationValue\n    })\n  }).then(response => response.json());\n} // For Delete Qualification\n\nexport function deleteQualificationAPI(doc_id, APImethod, Qualificationid) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/qualifications/\" + Qualificationid, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} // For Edit Qualification\n\nexport function editQualificationAPI(doc_id, APImethod, QualificationValue, Qualificationid) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/qualifications/\" + Qualificationid, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      qualification: QualificationValue\n    })\n  }).then(response => response.json());\n} // Get all Doctor Facilities\n\nexport function facilitiesAPI(doc_id) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/facilities\").then(response => response.json());\n} // For adding a new facility\n\nexport function addFacilityAPI(doc_id, APImethod, FacilityValue) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/facilities\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      facility: FacilityValue\n    })\n  }).then(response => response.json());\n} // For Delete Facility\n\nexport function deleteFacilityAPI(doc_id, APImethod, Facilityid) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/facilities/\" + Facilityid, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} // For Edit Facility\n\nexport function editFacilityAPI(doc_id, APImethod, FacilityValue, Facilityid) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/facilities/\" + Facilityid, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      facility: FacilityValue\n    })\n  }).then(response => response.json());\n} // Get all Doctor Locations\n\nexport function locationsAPI(doc_id) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/locations\").then(response => response.json());\n} // Get all and search all Doctor locations\n\nexport function searchLocationsAPI(doc_id, char_val) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/locations/\" + char_val).then(response => response.json());\n} // Add a new location\n\nexport function addLocationAPI(doc_id, APImethod, locationValue, daysValue, feesValue, start_timeValue, end_timeValue) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/locations\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      location: locationValue,\n      days: daysValue,\n      fees: feesValue,\n      start_time: start_timeValue,\n      end_time: end_timeValue\n    })\n  }).then(response => response.json());\n} // Edit a Location\n\nexport function editLocationAPI(doc_id, APImethod, doctors_hospital_location_id, locationValue, daysValue, feesValue, start_timeValue, end_timeValue) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/locations/\" + doctors_hospital_location_id, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      location: locationValue,\n      days: daysValue,\n      fees: feesValue,\n      start_time: start_timeValue,\n      end_time: end_timeValue\n    })\n  }).then(response => response.json());\n} // Delete a location\n\nexport function deleteLocationAPI(doc_id, APImethod, doctors_hospital_location_id) {\n  return fetch(doc_BaseURL + doc_id + \"/profile/location/\" + doctors_hospital_location_id, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} /////////////////////////////////////////////////// Appointment Screen APIs ///////////////////////////////////////////////////////////////////\n// Get Appointments by selected date\n\nexport function appointmentsByDateAPI(doc_ID, hospital_ID, patient_ID, date) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments?selected_date=\" + date).then(response => response.json());\n} //Get patient info\n\nexport function patientInfoAPI(patient_ID) {\n  return fetch(pat_BaseURL + patient_ID + \"/profile/info\").then(response => response.json());\n} //Get  patient’s appointments detail\n\nexport function appointmentDetailAPI(patient_ID) {\n  return fetch(pat_BaseURL + patient_ID + \"/profile/history\").then(response => response.json());\n} //New Appointment\n\nexport function addAppointmentAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, date, time) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      date_by_doc: date,\n      time_by_doc: time\n    })\n  }).then(response => response.json());\n} //(pat_BaseURL+patient_ID+\"/doctors/\"+doc_ID+\"/locations/\"+hospital_ID+\"/appointments/\"+appointment_ID)\n//Reschedule appointment\n// export function rescheduleAppointmentAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,date,time){\n//     return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_reschedule/\"+appointment_ID), {\n//         method: APImethod,\n//         headers: headers,\n//         body: JSON.stringify({\n//             date_by_doc: date,\n//             time_by_doc: time        \n//         })\n//         }).then(response => response.json());\n// }\n\nexport function rescheduleAppointmentAPI(appointment_ID, hospital_ID, APImethod, date, time) {\n  return fetch('https://app.aibers.health/api/rescheduleAppointment/' + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      date_by_doc: date,\n      time_by_doc: time,\n      doctors_hospital_location_id: hospital_ID\n    })\n  }).then(response => response.json());\n} // /api/rescheduleAppointment/'+appointment_id, {​​​​​\n//     method: 'PUT',\n//     headers: headers,\n//     body: JSON.stringify({​​​​​\n//       date_by_doc: date,\n//       time_by_doc : time,\n//       doctors_hospital_location_id: location_id,\n//     }​​​​​)\n//   }​​​​​);\n//Change Appointment Status\n\nexport function appointmentStatusAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, status) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments/\" + appointment_ID + \"(:appointment_id)?appointment_status=\" + status, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} // Search all Symptoms by character\n\nexport function searchSymptomAPI(doc_id, hospital_ID, patient_ID, char_val) {\n  return fetch(doc_BaseURL + doc_id + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_symptoms/?character=\" + char_val).then(response => response.json());\n} //Add symptoms in an appointment\n\nexport function addSymptomInAppointmentAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, symptomValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_symptoms/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      symtoms_name: symptomValue\n    })\n  }).then(response => response.json());\n} //Add symptoms in symptoms\n\nexport function addNewSymptomAPI(doc_ID, hospital_ID, patient_ID, APImethod, symptomValue, symptomType) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_symptoms\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      symtoms_name: symptomValue,\n      symtoms_name: symptomType\n    })\n  }).then(response => response.json());\n} // Delete a symptom\n\nexport function deleteSymptomAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, symptomValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_symptoms/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      symtoms_name: symptomValue\n    })\n  }).then(response => response.json());\n} // Add Doctor Notes\n\nexport function addDoctorNotesAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, doctorNotes) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_doctornote/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      doctors_note: doctorNotes\n    })\n  }).then(response => response.json());\n} //https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_diagnosis?character=r\n//Search diagnosis\n\nexport function searchDiagnosisAPI(doc_id, hospital_ID, patient_ID, char_val) {\n  return fetch(doc_BaseURL + doc_id + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_diagnosis?character=\" + char_val).then(response => response.json());\n} //Add Diagnosis\n\nexport function addDiagnosisAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, diagnosisValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_diagnosis/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      diagnosis_name: diagnosisValue\n    })\n  }).then(response => response.json());\n} // Delete Diagnosis\n\nexport function deleteDiagnosisAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, diagnosisValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_diagnosis/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      diagnosis_name: diagnosisValue\n    })\n  }).then(response => response.json());\n} // Search all Tests by character\n\nexport function searchTestAPI(doc_id, hospital_ID, patient_ID, char_val) {\n  return fetch(doc_BaseURL + doc_id + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_tests?character=\" + char_val).then(response => response.json());\n} // https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_tests/(:appointment_id)\n//Add Test\n\nexport function addTestAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, testValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_tests/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      test_name: testValue\n    })\n  }).then(response => response.json());\n} // Delete Test\n\nexport function deleteTestAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, testValue) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_tests/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      test_name: testValue\n    })\n  }).then(response => response.json());\n} // Search all Medicines by character\n\nexport function searchMedicinesAPI(doc_id, hospital_ID, patient_ID, char_val) {\n  return fetch(doc_BaseURL + doc_id + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_medicine?character=\" + char_val).then(response => response.json());\n} //Add Prescription\n\nexport function addPrescriptionAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, medicine_name, days, quantity, frequency) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_prescription/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      medicine_name: medicine_name,\n      days: days,\n      quantity: quantity,\n      frequency: frequency\n    })\n  }).then(response => response.json());\n} // Delete Prescription\n\nexport function deletePrescriptionAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, medicine_name) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_prescription/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      medicine_name: medicine_name\n    })\n  }).then(response => response.json());\n} //Schedule Followup\n\nexport function scheduleFollowupAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod, doc_Date, doc_Time) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_followup/\" + appointment_ID, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      date_by_doc: doc_Date,\n      time_by_doc: doc_Time\n    })\n  }).then(response => response.json());\n} //https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_status/(:appointment_id)?status=inprogress\n// Get Patient’s Appointment history\n\nexport function getPatientAppoinmtmentHistoryAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_status/\" + appointment_ID + \"?status=inprogress\", {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} //https://app.aibers.health/doctors/[:doctor_id]/locations/[:doctors_hospital_location_id]/availableslots/\n//Available slots\n\nexport function availableSlotsAPI(doc_ID, hospital_ID, APImethod, date) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/availableslots/\", {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      date: date\n    })\n  }).then(response => response.json());\n} //https://app.aibers.health/doctors/2/locations/0/patients/1/completed_appointments\n// Get Patient’s completed Appointments history\n\nexport function getPatientCompletedAppoinmtmentHistoryAPI(doc_ID, hospital_ID, patient_ID, APImethod) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/completed_appointments\", {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} //https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_status/(:appointment_id)?status=completed\n// Get Patient’s completed Appointment history profile\n\nexport function getPatientCompletedAppoinmtmentProfileAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, APImethod) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_status/\" + appointment_ID + \"?status=completed\", {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} //https://app.aibers.health/patients/2/vitals/0\n//Get all vitals data\n\nexport function getVitalsAPI(patient_ID, vital_ID, APImethod) {\n  return fetch(pat_BaseURL + patient_ID + \"/vitals/\" + vital_ID, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n} // /patients/'+patient_id+'/vitals/'+vital_id, {\n//     method: method,\n//     headers: headers,\n//     body: JSON.stringify({\n//       new_value:vital_value,\n//     })\n//   });\n//Add Vitals\n\nexport function addVitalAPI(patient_ID, vital_id, APImethod, vital_value) {\n  return fetch(pat_BaseURL + patient_ID + \"/vitals/\" + vital_id, {\n    method: APImethod,\n    headers: headers,\n    body: JSON.stringify({\n      new_value: vital_value\n    })\n  }).then(response => response.json());\n}\nexport function getAllPatientsOfDoctorByName(doc_ID, hospital_ID, patient_ID, searchKey, APImethod) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/allPatients/\", {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n}\nexport function getPatientAppoinmtmentByStatusAPI(doc_ID, hospital_ID, patient_ID, appointment_ID, status, APImethod) {\n  return fetch(doc_BaseURL + doc_ID + \"/locations/\" + hospital_ID + \"/patients/\" + patient_ID + \"/appointments_status/\" + appointment_ID + \"?status=\" + status, {\n    method: APImethod,\n    headers: headers\n  }).then(response => response.json());\n}\nexport function getImage(person, id) {\n  return fetch(BaseURL + '/' + person + '/' + id + '/image').then(response => response.json());\n}","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/DB/API.js"],"names":["doc_BaseURL","pat_BaseURL","BaseURL","headers","Accept","GetDoctorAllInfoAPI","doc_id","fetch","then","response","json","editAboutInfoAPI","APImethod","nameValue","genderValue","dobValue","specializationValue","aboutValue","method","body","JSON","stringify","name","gender","dob","specialization","about","qualificationsAPI","addQualificationAPI","QualificationValue","qualification","deleteQualificationAPI","Qualificationid","editQualificationAPI","facilitiesAPI","addFacilityAPI","FacilityValue","facility","deleteFacilityAPI","Facilityid","editFacilityAPI","locationsAPI","searchLocationsAPI","char_val","addLocationAPI","locationValue","daysValue","feesValue","start_timeValue","end_timeValue","location","days","fees","start_time","end_time","editLocationAPI","doctors_hospital_location_id","deleteLocationAPI","appointmentsByDateAPI","doc_ID","hospital_ID","patient_ID","date","patientInfoAPI","appointmentDetailAPI","addAppointmentAPI","appointment_ID","time","date_by_doc","time_by_doc","rescheduleAppointmentAPI","appointmentStatusAPI","status","searchSymptomAPI","addSymptomInAppointmentAPI","symptomValue","symtoms_name","addNewSymptomAPI","symptomType","deleteSymptomAPI","addDoctorNotesAPI","doctorNotes","doctors_note","searchDiagnosisAPI","addDiagnosisAPI","diagnosisValue","diagnosis_name","deleteDiagnosisAPI","searchTestAPI","addTestAPI","testValue","test_name","deleteTestAPI","searchMedicinesAPI","addPrescriptionAPI","medicine_name","quantity","frequency","deletePrescriptionAPI","scheduleFollowupAPI","doc_Date","doc_Time","getPatientAppoinmtmentHistoryAPI","availableSlotsAPI","getPatientCompletedAppoinmtmentHistoryAPI","getPatientCompletedAppoinmtmentProfileAPI","getVitalsAPI","vital_ID","addVitalAPI","vital_id","vital_value","new_value","getAllPatientsOfDoctorByName","searchKey","getPatientAppoinmtmentByStatusAPI","getImage","person","id"],"mappings":"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","sourcesContent":["const doc_BaseURL = \"https://app.aibers.health/doctors/\";\nconst pat_BaseURL = \"https://app.aibers.health/patients/\";\nconst BaseURL=\"https://app.aibers.health\"\nconst headers = {Accept: 'application/json','Content-Type': 'application/json'};\n// export function API ( url) {\n//     return fetch(url).then(response => response.json())\n// }\n\n\n/////////////////////////////////////////////////// Profile Screen APIs ///////////////////////////////////////////////////////////////////\n\n//Get Doctor all info\nexport function GetDoctorAllInfoAPI(doc_id) {\n    return fetch(doc_BaseURL+doc_id+\"/profile\").then(response => response.json());\n}\n\n// For Edit doctor all info\nexport function editAboutInfoAPI(doc_id, APImethod,nameValue,genderValue,dobValue,specializationValue,aboutValue){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/info\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            name: nameValue,\n            gender: genderValue,\n            dob: dobValue,\n            specialization: specializationValue,\n            about: aboutValue\n\n        })\n        }).then(response => response.json());\n}\n\n// Get all Doctor Qualifications\nexport function qualificationsAPI(doc_id){\n    return fetch(doc_BaseURL+doc_id+\"/profile/qualifications\").then(response => response.json());\n}\n\n// For adding a new facility\nexport function addQualificationAPI(doc_id, APImethod,QualificationValue){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/qualifications\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            qualification: QualificationValue\n        })\n        }).then(response => response.json());\n}\n\n\n// For Delete Qualification\nexport function deleteQualificationAPI(doc_id, APImethod,Qualificationid){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/qualifications/\"+Qualificationid), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n// For Edit Qualification\nexport function editQualificationAPI(doc_id, APImethod ,QualificationValue, Qualificationid){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/qualifications/\"+Qualificationid), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            qualification: QualificationValue\n        })\n        }).then(response => response.json());\n}\n\n// Get all Doctor Facilities\nexport function facilitiesAPI(doc_id){\n    return fetch(doc_BaseURL+doc_id+\"/profile/facilities\").then(response => response.json());\n}\n\n// For adding a new facility\nexport function addFacilityAPI(doc_id, APImethod,FacilityValue){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/facilities\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            facility: FacilityValue\n        })\n        }).then(response => response.json());\n}\n\n\n// For Delete Facility\nexport function deleteFacilityAPI(doc_id, APImethod,Facilityid){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/facilities/\"+Facilityid), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n// For Edit Facility\nexport function editFacilityAPI(doc_id, APImethod ,FacilityValue, Facilityid){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/facilities/\"+Facilityid), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            facility: FacilityValue\n        })\n        }).then(response => response.json());\n}\n\n// Get all Doctor Locations\nexport function locationsAPI(doc_id){\n    return fetch(doc_BaseURL+doc_id+\"/profile/locations\").then(response => response.json());\n}\n\n\n// Get all and search all Doctor locations\nexport function searchLocationsAPI(doc_id,char_val){\n    return fetch(doc_BaseURL+doc_id+\"/profile/locations/\"+char_val).then(response => response.json());\n}\n\n// Add a new location\nexport function addLocationAPI(doc_id, APImethod,locationValue,daysValue,feesValue,start_timeValue,end_timeValue){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/locations\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            location: locationValue,\n            days: daysValue,\n            fees: feesValue,\n            start_time: start_timeValue,\n            end_time: end_timeValue,\n\n        })\n        }).then(response => response.json());\n}\n\n// Edit a Location\nexport function editLocationAPI(doc_id, APImethod,doctors_hospital_location_id,locationValue,daysValue,feesValue,start_timeValue,end_timeValue){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/locations/\"+doctors_hospital_location_id), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            location: locationValue,\n            days: daysValue,\n            fees: feesValue,\n            start_time: start_timeValue,\n            end_time: end_timeValue,\n        })\n        }).then(response => response.json());\n}\n\n// Delete a location\n\nexport function deleteLocationAPI(doc_id, APImethod,doctors_hospital_location_id){\n    return  fetch((doc_BaseURL+doc_id+\"/profile/location/\"+doctors_hospital_location_id), {\n        method: APImethod,\n        headers: headers,\n        }).then(response => response.json());\n}\n\n\n/////////////////////////////////////////////////// Appointment Screen APIs ///////////////////////////////////////////////////////////////////\n\n\n// Get Appointments by selected date\nexport function appointmentsByDateAPI(doc_ID,hospital_ID,patient_ID,date) {\n    return fetch(doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments?selected_date=\"+date).then(response => response.json());\n}\n\n//Get patient info\nexport function patientInfoAPI(patient_ID) {\n    return fetch(pat_BaseURL+patient_ID+\"/profile/info\").then(response => response.json());\n}\n\n\n//Get  patient’s appointments detail\nexport function appointmentDetailAPI(patient_ID) {\n    return fetch(pat_BaseURL+patient_ID+\"/profile/history\").then(response => response.json());\n}\n\n//New Appointment\nexport function addAppointmentAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,date,time){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            date_by_doc: date,\n            time_by_doc: time\n        })\n        }).then(response => response.json());\n}\n\n\n//(pat_BaseURL+patient_ID+\"/doctors/\"+doc_ID+\"/locations/\"+hospital_ID+\"/appointments/\"+appointment_ID)\n//Reschedule appointment\n// export function rescheduleAppointmentAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,date,time){\n//     return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_reschedule/\"+appointment_ID), {\n//         method: APImethod,\n//         headers: headers,\n//         body: JSON.stringify({\n//             date_by_doc: date,\n//             time_by_doc: time        \n\n//         })\n//         }).then(response => response.json());\n// }\n\nexport function rescheduleAppointmentAPI(appointment_ID,hospital_ID,APImethod,date,time){\n    return  fetch(('https://app.aibers.health/api/rescheduleAppointment/'+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            date_by_doc: date,\n            time_by_doc: time,\n            doctors_hospital_location_id:hospital_ID\n        })\n        }).then(response => response.json());\n}\n\n// /api/rescheduleAppointment/'+appointment_id, {​​​​​\n//     method: 'PUT',\n//     headers: headers,\n//     body: JSON.stringify({​​​​​\n    \n//       date_by_doc: date,\n//       time_by_doc : time,\n//       doctors_hospital_location_id: location_id,\n//     }​​​​​)\n//   }​​​​​);\n\n//Change Appointment Status\nexport function appointmentStatusAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,status){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments/\"+appointment_ID+\"(:appointment_id)?appointment_status=\"+status), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n// Search all Symptoms by character\nexport function searchSymptomAPI(doc_id,hospital_ID,patient_ID,char_val){\n    return fetch(doc_BaseURL+doc_id+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_symptoms/?character=\"+char_val).then(response => response.json());\n}\n\n\n//Add symptoms in an appointment\nexport function addSymptomInAppointmentAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,symptomValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_symptoms/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            symtoms_name: symptomValue\n        })\n        }).then(response => response.json());\n}\n\n\n\n//Add symptoms in symptoms\nexport function addNewSymptomAPI(doc_ID,hospital_ID,patient_ID,APImethod,symptomValue,symptomType){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_symptoms\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            symtoms_name: symptomValue,\n            symtoms_name: symptomType\n        })\n        }).then(response => response.json());\n}\n\n\n// Delete a symptom\nexport function deleteSymptomAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,symptomValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_symptoms/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            symtoms_name: symptomValue\n        })\n        }).then(response => response.json());\n}\n\n\n// Add Doctor Notes\nexport function addDoctorNotesAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,doctorNotes){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_doctornote/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            doctors_note: doctorNotes\n        })\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_diagnosis?character=r\n\n//Search diagnosis\n\nexport function searchDiagnosisAPI(doc_id,hospital_ID,patient_ID,char_val){\n    return fetch(doc_BaseURL+doc_id+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_diagnosis?character=\"+char_val).then(response => response.json());\n}\n\n//Add Diagnosis\nexport function addDiagnosisAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,diagnosisValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_diagnosis/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            diagnosis_name: diagnosisValue\n        })\n        }).then(response => response.json());\n}\n\n\n// Delete Diagnosis\nexport function deleteDiagnosisAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,diagnosisValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_diagnosis/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            diagnosis_name: diagnosisValue\n        })\n        }).then(response => response.json());\n}\n\n// Search all Tests by character\nexport function searchTestAPI(doc_id,hospital_ID,patient_ID,char_val){\n    return fetch(doc_BaseURL+doc_id+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_tests?character=\"+char_val).then(response => response.json());\n}\n\n// https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_tests/(:appointment_id)\n\n//Add Test\nexport function addTestAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,testValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_tests/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            test_name: testValue\n        })\n        }).then(response => response.json());\n}\n\n// Delete Test\nexport function deleteTestAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,testValue){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_tests/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            test_name: testValue\n        })\n        }).then(response => response.json());\n}\n\n\n// Search all Medicines by character\nexport function searchMedicinesAPI(doc_id,hospital_ID,patient_ID,char_val){\n    return fetch(doc_BaseURL+doc_id+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_medicine?character=\"+char_val).then(response => response.json());\n}\n\n//Add Prescription\nexport function addPrescriptionAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,medicine_name,days,quantity,frequency){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_prescription/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            medicine_name: medicine_name,\n            days: days,\n            quantity : quantity,\n            frequency :frequency\n        })\n        }).then(response => response.json());\n}\n\n// Delete Prescription\nexport function deletePrescriptionAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,medicine_name){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_prescription/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            medicine_name: medicine_name,\n        })\n        }).then(response => response.json());\n}\n\n\n//Schedule Followup\nexport function scheduleFollowupAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod,doc_Date,doc_Time){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_followup/\"+appointment_ID), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            date_by_doc:doc_Date,\n            time_by_doc:doc_Time\n\n        })\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_status/(:appointment_id)?status=inprogress\n\n// Get Patient’s Appointment history\nexport function getPatientAppoinmtmentHistoryAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_status/\"+appointment_ID+\"?status=inprogress\"), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/doctors/[:doctor_id]/locations/[:doctors_hospital_location_id]/availableslots/\n\n//Available slots\nexport function availableSlotsAPI(doc_ID,hospital_ID,APImethod,date){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/availableslots/\"), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n            date:date\n        })\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/doctors/2/locations/0/patients/1/completed_appointments\n// Get Patient’s completed Appointments history\nexport function getPatientCompletedAppoinmtmentHistoryAPI(doc_ID,hospital_ID,patient_ID,APImethod){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/completed_appointments\"), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/doctors/(:doctor_id)/locations/(:doctors_hospital_location_id)/patients/(:patient_id)/appointments_status/(:appointment_id)?status=completed\n// Get Patient’s completed Appointment history profile\nexport function getPatientCompletedAppoinmtmentProfileAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,APImethod){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_status/\"+appointment_ID+\"?status=completed\"), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n//https://app.aibers.health/patients/2/vitals/0\n//Get all vitals data\nexport function getVitalsAPI(patient_ID,vital_ID,APImethod){\n    return  fetch((pat_BaseURL+patient_ID+\"/vitals/\"+vital_ID), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\n// /patients/'+patient_id+'/vitals/'+vital_id, {\n//     method: method,\n//     headers: headers,\n//     body: JSON.stringify({\n//       new_value:vital_value,\n//     })\n//   });\n\n//Add Vitals\nexport function addVitalAPI(patient_ID,vital_id,APImethod,vital_value){\n    return  fetch((pat_BaseURL+patient_ID+\"/vitals/\"+vital_id), {\n        method: APImethod,\n        headers: headers,\n        body: JSON.stringify({\n        new_value:vital_value,\n    })\n        }).then(response => response.json());\n}\n\nexport function getAllPatientsOfDoctorByName (doc_ID, hospital_ID, patient_ID,searchKey, APImethod) {\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/allPatients/\"), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\nexport function getPatientAppoinmtmentByStatusAPI(doc_ID,hospital_ID,patient_ID,appointment_ID,status,APImethod){\n    return  fetch((doc_BaseURL+doc_ID+\"/locations/\"+hospital_ID+\"/patients/\"+patient_ID+\"/appointments_status/\"+appointment_ID+\"?status=\"+status), {\n        method: APImethod,\n        headers: headers\n        }).then(response => response.json());\n}\n\nexport function getImage(person,id){\n    return fetch(BaseURL+'/'+person+'/'+id+'/image').then((response) => response.json());\n  }"]},"metadata":{},"sourceType":"module"}
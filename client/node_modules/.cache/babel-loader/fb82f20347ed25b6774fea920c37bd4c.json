{"ast":null,"code":"var _jsxFileName = \"/home/humna/Desktop/aibers_web/client/src/views/Components/VitalsChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from 'moment';\n\nconst VitalsChart = props => {\n  // const data = props.data[0];\n  const [data, setData] = useState(-1);\n  const [chartData, setChartData] = useState({});\n  console.log(\"vitals chart Data is \", props.data);\n  let observedRange = [];\n  let normalRange = [];\n  let datesArray = []; // const [observedRange,setObservedRange] = useState([]);\n  // const [normalRange,setNormalRange] = useState([]);\n  // const [datesArray,setDatesArray] = useState([]);\n\n  const prepareChartData = data => {\n    let observed = [];\n    let normal = [];\n    let dates = [];\n\n    for (var i = 0; i < data[0].vital_data.length; i++) {\n      dates.push(moment(data[0].vital_data[i].date_time).format('LL'));\n    }\n\n    for (var i = 0; i < data[0].vital_data.length; i++) {\n      observed.push(!!data[0].vital_data[i].current_value ? parseInt(data[0].vital_data[i].current_value) : 0);\n    }\n\n    for (var i = 0; i < data[0].vital_data.length; i++) {\n      normal.push(!!data[0].vital_info.normal_range ? parseInt(data[0].vital_info.normal_range) : 0);\n    }\n\n    console.log(\"a \", observed, \" b \", dates, \" c \", normal);\n    observedRange = observed.reverse();\n    normalRange = normal.reverse();\n    datesArray = dates.reverse();\n  };\n\n  useEffect(() => {\n    console.log(\"Farid \", props.data); // setData();\n\n    if (props.data.length > 0) {\n      console.log(\"Farid 1 \", props.data[0].vital_id);\n      console.log(\"Farid 2 \", data);\n\n      if (props.data[0].vital_id !== data) {\n        console.log(\"i am here\");\n        prepareChartData(props.data);\n        console.log(\"Arrays \", datesArray, \" \", observedRange, \" \", normalRange);\n        chart();\n        setData(props.data[0].vital_id);\n      }\n    }\n  });\n\n  const chart = () => {\n    console.log(\"Kalim \", datesArray, \" \", observedRange, \" \", normalRange);\n    let empSal = datesArray;\n    let empAge1 = observedRange;\n    let empAge2 = normalRange;\n    setChartData({\n      labels: empSal,\n      datasets: [{\n        label: \"Observed\",\n        data: empAge1,\n        borderColor: \"rgba(255, 0, 0)\",\n        backgroundColor: [\"rgba(255, 0, 0, 0.6)\"],\n        fill: false,\n        borderWidth: 4\n      }, {\n        label: \"Normal Range\",\n        data: empAge2,\n        borderColor: \"rgba(75, 182, 180)\",\n        backgroundColor: [\"rgba(75, 182, 180, 0.6)\"],\n        fill: false,\n        borderWidth: 2\n      }]\n    });\n  }; // useEffect(() => {\n  //     chart();\n  //     // props.values();\n  // }, []);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, props.data.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: {\n      responsive: true,\n      interaction: {\n        mode: 'index'\n      },\n      stacked: false,\n      plugins: {\n        title: {\n          display: true,\n          text: 'Chart.js Line Chart - Multi Axis'\n        }\n      },\n      title: {\n        text: \"Vitals Observed Visualization\",\n        display: true\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        yAxes2: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 6,\n            beginAtZero: true\n          },\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            drawOnChartArea: false\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default VitalsChart;","map":{"version":3,"sources":["/home/humna/Desktop/aibers_web/client/src/views/Components/VitalsChart.js"],"names":["React","useState","useEffect","Line","moment","VitalsChart","props","data","setData","chartData","setChartData","console","log","observedRange","normalRange","datesArray","prepareChartData","observed","normal","dates","i","vital_data","length","push","date_time","format","current_value","parseInt","vital_info","normal_range","reverse","vital_id","chart","empSal","empAge1","empAge2","labels","datasets","label","borderColor","backgroundColor","fill","borderWidth","responsive","interaction","mode","stacked","plugins","title","display","text","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","drawOnChartArea","yAxes2","xAxes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport moment from 'moment'\n\n \nconst VitalsChart = (props) => {\n    // const data = props.data[0];\n    const [data, setData] = useState(-1);\n    const [chartData, setChartData] = useState({});\n    console.log(\"vitals chart Data is \",props.data);\n    let observedRange = [];\n    let normalRange= [];\n    let datesArray=[];\n    // const [observedRange,setObservedRange] = useState([]);\n    // const [normalRange,setNormalRange] = useState([]);\n    // const [datesArray,setDatesArray] = useState([]);\n    const prepareChartData=(data)=>{\n        let observed=[];\n        let normal=[];\n        let dates=[];\n        for(var i=0; i<data[0].vital_data.length; i++)\n        {\n            dates.push(moment(data[0].vital_data[i].date_time).format('LL'))   \n        }\n        \n        for(var i=0; i<data[0].vital_data.length; i++)\n        {\n            observed.push(!!data[0].vital_data[i].current_value?parseInt(data[0].vital_data[i].current_value):0)\n        }\n        \n        for(var i=0; i<data[0].vital_data.length; i++)\n        {\n            normal.push(!!data[0].vital_info.normal_range?parseInt(data[0].vital_info.normal_range):0)\n        }\n        \n        console.log(\"a \",observed,\" b \",dates,\" c \", normal);\n        observedRange = observed.reverse();\n        normalRange = normal.reverse();\n        datesArray = dates.reverse();\n      }\n\n      \n      \n      useEffect(() => {\n        console.log(\"Farid \",props.data);\n        // setData();\n        if(props.data.length>0){\n            console.log(\"Farid 1 \",props.data[0].vital_id);\n            console.log(\"Farid 2 \",data);\n            if(props.data[0].vital_id!== data){\n                console.log(\"i am here\")\n                prepareChartData(props.data);\n                console.log(\"Arrays \",datesArray,\" \", observedRange,\" \",normalRange );\n                chart();\n                setData(props.data[0].vital_id);\n            }\n        }\n    });\n\n    const chart = () => {\n        console.log(\"Kalim \",datesArray,\" \", observedRange,\" \",normalRange );\n        let empSal = datesArray;\n        let empAge1 = observedRange;\n        let empAge2 = normalRange;\n            setChartData({\n            labels: empSal,\n            datasets: [\n                {\n                label: \"Observed\",\n                data: empAge1,\n                borderColor:\"rgba(255, 0, 0)\",\n                backgroundColor: [\"rgba(255, 0, 0, 0.6)\"],\n                fill:false,\n                borderWidth: 4\n                },\n                {\n                    label: \"Normal Range\",\n                    data: empAge2,\n                    borderColor:\"rgba(75, 182, 180)\",\n                    backgroundColor: [\"rgba(75, 182, 180, 0.6)\"],\n                    fill:false,\n                    borderWidth: 2\n                }\n            ]\n            });\n        }\n\n    // useEffect(() => {\n    //     chart();\n    //     // props.values();\n    // }, []);\n    return (\n        <div className=\"App\">\n            {props.data.length>0 && <div>\n        <div>\n            <Line\n            data={chartData}\n            options={{\n                responsive: true,\n                interaction: {\n                    mode: 'index'\n                },\n                stacked: false,\n\t\t\t\t\tplugins: {\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: 'Chart.js Line Chart - Multi Axis'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n                title: { text: \"Vitals Observed Visualization\", display: true },\n                scales: {\n                yAxes: [\n                    {\n                    ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 10,\n                        beginAtZero: true\n                    },\n                    gridLines: {\n                        drawOnChartArea: false,\n                    }\n                    },\n                ],\n                yAxes2: [\n                    {\n                    ticks: {\n                        autoSkip: true,\n                        maxTicksLimit: 6,\n                        beginAtZero: true\n                    },\n                    gridLines: {\n                        drawOnChartArea: false,\n                    }\n                    },\n                ],\n                xAxes: [\n                    {\n                    gridLines: {\n                        drawOnChartArea: false,\n                    }\n                    }\n                ]\n                }\n            }}\n            />\n        </div>\n        </div>}\n        </div>\n    );\n\n}\nexport default VitalsChart"]},"metadata":{},"sourceType":"module"}